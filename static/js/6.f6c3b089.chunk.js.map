{"version":3,"sources":["components/main_page/CurrentWeatherWidget.jsx","components/main_page/HourlyWidget.jsx","components/main_page/DailyWidget.jsx","components/main_page/SunriseSunset.jsx","components/main_page/DetailList.jsx","components/main_page/AdditionalInfoWidget.jsx","components/main_page/Today.jsx","components/main_page/DetailBox.jsx","components/main_page/Hourly.jsx","components/main_page/Daily.jsx","components/main_page/Map.jsx","components/main_page/MainPage.jsx"],"names":["CurrentWeatherWidget","stationData","useContext","SettingsContext","settings","theme","useTheme","breakpointMatches","useMediaQuery","breakpoints","down","time","Date","current","dt","timezone_offset","toLocaleString","hour","minute","hourCycle","utcOffset","Paper","elevation","style","padding","spacing","Typography","color","marginBottom","component","variant","city","country","lat","lon","display","justifyContent","temperature","Math","round","temp","textTransform","weather","description","height","backgroundColor","palette","type","borderRadius","alt","src","icon","calculateCardAmount","firstCard","firstCardOuter","amountToRender","setAmountToRender","parseFloat","window","getComputedStyle","width","prev","HourlyWidget","useState","amountToRenderPersist","useRef","useEffect","eventListenerFunction","addEventListener","removeEventListener","path","useRouteMatch","redirect","setRedirect","Card","marginTop","CardHeader","title","CardContent","hourly","slice","map","entry","index","ref","flexGrow","alignItems","flexDirection","margin","objectFit","pop","CardActions","Button","onClick","push","to","useStyles","makeStyles","medium","fontSize","typography","pxToRem","small","DailyWidget","classes","daily","day","weekday","className","night","SunriseSunset","sunriseInUnix","sunsetInUnix","currentTime","canvasContainerRef","canvasRef","sunriseRef","sunsetRef","themePersist","canvas","canvasContainer","upscaleRes","offsetWidth","resizeFunction","rerender","render","sunriseUnix","sunsetUnix","c","getContext","clearRect","lineCap","lineWidth","beginPath","arc","PI","strokeStyle","stroke","percentOfDay","gradient","createLinearGradient","addColorStop","draw","requestAnimationFrame","timeSunrise","timeSunset","marginLeft","marginRight","listItem","paddingLeft","list","text","primary","DetailList","flexWrap","List","minWidth","Divider","ListItem","ListItemText","ListItemSecondaryAction","pressure","visibility","distance","dew_point","uvi","speed","wind_speed","wind_deg","AdditionalInfoWidget","paddingBottom","feels_like","sunrise","sunset","Current","setTabSelected","parameterName","secondary","parameterValue","DetailBox","root","header","headerLarge","fontWeight","summaryContent","Hourly","prevDay","expanded","setExpanded","date","dayChange","panel","fullDate","month","Fragment","Accordion","TransitionProps","unmountOnExit","onChange","event","isExpanded","AccordionSummary","content","expandIcon","flexBasis","AccordionDetails","humidity","clouds","headerDate","headerSmall","headerMedium","summaryRoot","feelsLikeName","feelsLikeValueDay","Daily","flexShrink","rotateCamera","timestamp","offset","playAnimation","iteration","rotateTo","duration","Map","coords","locationMarker","API_KEY_MAPBOX","ApiKeysContext","breakpointMatchesPersist","heightOfMap","setHeightOfMap","mapContainer","document","querySelector","clientWidth","resize","setStyle","mapboxgl","accessToken","container","center","zoom","pitch","bearing","attributionControl","on","addControl","NavigationControl","visualizePitch","remove","Marker","main","setLngLat","addTo","id","onMouseDown","setStationData","API_KEY","history","a","fetch","currentWeatherDataAPIResponse","ok","json","currentWeatherDataAPIResponseJSON","coord","oneCallAPIResponseJSON","name","sys","localStorage","setItem","MainPage","match","API_KEY_OPENWEATHERMAP","snackbarOpen","setSnackbarOpen","useHistory","fetchUsingOneCallAPI","params","Grid","justify","item","xs","lg","alignContent","md","exact","props","Today","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","severity","CircularProgress"],"mappings":"4PA2EeA,MAvEf,YAAgD,IAAhBC,EAAe,EAAfA,YAC9B,EAAmBC,qBAAWC,KAAvBC,EAAP,oBACMC,EAAQC,cACRC,EAAoBC,YAAcH,EAAMI,YAAYC,KAAK,OAKzDC,EAHO,IAAIC,KAC0C,KAAxDX,EAAYY,QAAQC,GAAKb,EAAYc,kBAEtBC,eAAe,QAAS,CACxCC,KAAM,UACNC,OAAQ,UACRC,UAAW,QAGPC,EAAYnB,EAAYc,gBAAkB,KAEhD,OACE,eAACM,EAAA,EAAD,CAAOC,UAAW,EAAGC,MAAO,CAAEC,QAASnB,EAAMoB,QAAQ,IAArD,UACE,eAACC,EAAA,EAAD,CACEC,MAAM,cACNJ,MAAO,CAAEK,aAAc,GACvBC,UAAU,KACVC,QAAQ,KAJV,UAMG7B,EAAY8B,KANf,KAMuB9B,EAAY+B,WAEnC,eAACN,EAAA,EAAD,CAAYC,MAAM,gBAAgBE,UAAU,IAAIC,QAAQ,UAAxD,UACG7B,EAAYgC,IADf,KACsBhC,EAAYiC,OAElC,sBACEX,MAAO,CACLY,QAAS,OACTC,eAAgB,gBAChBR,aAAc,GAJlB,UAOE,gCACE,cAACF,EAAA,EAAD,CAAYC,MAAM,cAAcE,UAAU,IAAIC,QAAQ,KAAtD,SAC4B,MAAzB1B,EAASiC,YACNC,KAAKC,MAAMtC,EAAYY,QAAQ2B,KAAO,QAAU,QACvB,MAAzBpC,EAASiC,YACTC,KAAKC,MAAMtC,EAAYY,QAAQ2B,MAAQ,IACvCF,KAAKC,MAAkC,EAA3BtC,EAAYY,QAAQ2B,KAAY,EAAI,QAAU,UAEhE,cAACd,EAAA,EAAD,CACEC,MAAM,cACNJ,MAAO,CAAEkB,cAAe,cACxBX,QAAQ,KACRD,UAAU,IAJZ,SAMG5B,EAAYY,QAAQ6B,QAAQ,GAAGC,iBAGpC,qBACEpB,MAAO,CACLqB,OAAQrC,EAAoB,GAAK,IACjCsC,gBACyB,SAAvBxC,EAAMyC,QAAQC,KAAkB,UAAY,UAC9CC,aAAc,IAEhBC,IAAI,OACJC,IAAG,4CAAuCjD,EAAYY,QAAQ6B,QAAQ,GAAGS,KAAtE,gBAGP,eAACzB,EAAA,EAAD,CAAYC,MAAM,gBAAgBE,UAAU,IAAIC,QAAQ,UAAxD,mBACSnB,EADT,QACoBS,EAAY,EAAZ,WAAoBA,GAAcA,S,qDCtD5D,SAASgC,EACPC,EACAC,EACAC,EACAC,GAGEC,WAAWC,OAAOC,iBAAiBL,EAAezC,SAAS+C,OACzDH,WAAWC,OAAOC,iBAAiBN,EAAUxC,SAAS+C,OACxD,GAEAJ,GAAkB,SAACK,GAAD,OAAoB,IAATA,EAAaA,EAAOA,EAAO,KACpB,IAA3BN,EAAe1C,QAEtB4C,WAAWC,OAAOC,iBAAiBL,EAAezC,SAAS+C,OACzDH,WAAWC,OAAOC,iBAAiBN,EAAUxC,SAAS+C,OACxD,KAEAJ,GAAkB,SAACK,GAAD,OAAUA,EAAO,KAED,IAA3BN,EAAe1C,QAEtB4C,WAAWC,OAAOC,iBAAiBL,EAAezC,SAAS+C,OACzDH,WAAWC,OAAOC,iBAAiBN,EAAUxC,SAAS+C,OACxD,KAEAJ,GAAkB,SAACK,GAAD,OAAUA,EAAO,KAGrCJ,WAAWC,OAAOC,iBAAiBL,EAAezC,SAAS+C,OACzDH,WAAWC,OAAOC,iBAAiBN,EAAUxC,SAAS+C,OACxD,IAEAJ,GAAkB,SAACK,GAAD,OAAUA,EAAO,KA4IxBC,MAxIf,YAAwC,IAAhB7D,EAAe,EAAfA,YACtB,EAA4C8D,mBAAS,GAArD,mBAAOR,EAAP,KAAuBC,EAAvB,KACMQ,EAAwBC,iBAAOV,GACrCS,EAAsBnD,QAAU0C,EAEhC,IAAMlD,EAAQC,cAER+C,EAAYY,mBACZX,EAAiBW,mBAEvBC,qBAAU,WACRd,EACEC,EACAC,EACAU,EACAR,KAED,CAACD,IAEJW,qBAAU,WACR,SAASC,IACPf,EACEC,EACAC,EACAU,EACAR,GAIJ,OADAE,OAAOU,iBAAiB,SAAUD,GAC3B,kBAAMT,OAAOW,oBAAoB,SAAUF,MACjD,IAEH,IAAQG,EAASC,cAATD,KACR,EAAgCP,mBAAS,MAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KAEA,EAAmBvE,qBAAWC,KAAvBC,EAAP,oBAEA,OACE,qCACGoE,EACD,eAACE,EAAA,EAAD,CAAMpD,UAAW,EAAGC,MAAO,CAAEoD,UAAWtE,EAAMoB,QAAQ,IAAtD,UACE,cAACmD,EAAA,EAAD,CAAYC,MAAM,oBAClB,cAACC,EAAA,EAAD,CACExD,UAAW,EACXC,MAAO,CACLY,QAAS,QAHb,SAMGlC,EAAY8E,OACVC,MAAM,EAAGzB,EAAiB,GAC1B0B,KAAI,SAACC,EAAOC,GACX,IAIMxE,EAJO,IAAIC,KAC4B,KAA1CsE,EAAMpE,GAAKb,EAAYc,kBAGRC,eAAe,QAAS,CACxCC,KAAM,UACNC,OAAQ,UACRC,UAAW,QAGb,OACE,qBAEEiE,IAAe,IAAVD,EAAc7B,EAAiB,KACpC/B,MAAO,CACL8D,SAAU,IACVlD,QAAS,OACTmD,WAAY,SACZlD,eAAgB,UAPpB,SAUE,eAACf,EAAA,EAAD,CACE+D,IAAe,IAAVD,EAAc9B,EAAY,KAC/BvB,QAAQ,WACRP,MAAO,CACLY,QAAS,cACTmD,WAAY,SACZ1B,MAAO,IACPpC,QAAQ,GAAD,OAAKnB,EAAMoB,QAAQ,GAAnB,cAA2BpB,EAAMoB,QAAQ,GAAzC,MACP8D,cAAe,SACfnD,eAAgB,UATpB,UAYE,cAACV,EAAA,EAAD,CAAYI,QAAQ,KAAKD,UAAU,IAAnC,SACGlB,IAEH,cAACe,EAAA,EAAD,CACEI,QAAQ,KACRD,UAAU,IACVN,MAAO,CAAEiE,OAAO,GAAD,OAAKnF,EAAMoB,QAAQ,GAAnB,WAHjB,SAK4B,MAAzBrB,EAASiC,YACNC,KAAKC,MAAM2C,EAAM1C,KAAO,QAAU,QACT,MAAzBpC,EAASiC,YACTC,KAAKC,MAAM2C,EAAM1C,MAAQ,IACzBF,KAAKC,MAAoB,EAAb2C,EAAM1C,KAAY,EAAI,QAAU,UAElD,qBACEjB,MAAO,CACLiE,OAAO,GAAD,OAAKnF,EAAMoB,QAAQ,GAAnB,UACNmB,OAAQ,GACRgB,MAAO,GACP6B,UAAW,QACX5C,gBACyB,SAAvBxC,EAAMyC,QAAQC,KAAkB,UAAY,UAC9CC,aAAc,GAEhBC,IAAI,OACJC,IAAG,4CAAuCgC,EAAMxC,QAAQ,GAAGS,KAAxD,aAEL,sBAAK5B,MAAO,CAAEY,QAAS,OAAQmD,WAAY,UAA3C,UACE,cAAC,IAAD,CAAO1B,MAAO,KACd,eAAClC,EAAA,EAAD,CAAYI,QAAQ,KAAKD,UAAU,IAAnC,UACG,OACAS,KAAKC,MAAkB,IAAZ2C,EAAMQ,KAFpB,cAlDCP,QA4Df,cAACQ,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,QAAS,kBAAMpB,EAAY,cAAC,IAAD,CAAUqB,MAAI,EAACC,GAAE,UAAKzB,EAAL,eAC5C3C,MAAM,UAFR,oC,iBChKJqE,EAAYC,aAAW,SAAC5F,GAAD,MAAY,CACvC6F,OAAO,aACLC,SAAU9F,EAAM+F,WAAWC,QAAQ,KAClChG,EAAMI,YAAYC,KAAK,MAAQ,CAC9ByF,SAAU9F,EAAM+F,WAAWC,QAAQ,MAGvCC,MAAM,aACJH,SAAU9F,EAAM+F,WAAWC,QAAQ,KAClChG,EAAMI,YAAYC,KAAK,MAAQ,CAC9ByF,SAAU9F,EAAM+F,WAAWC,QAAQ,UAKzC,SAASjD,EACPC,EACAC,EACAC,EACAC,GAGEC,WAAWC,OAAOC,iBAAiBL,EAAezC,SAAS+C,OACzDH,WAAWC,OAAOC,iBAAiBN,EAAUxC,SAAS+C,OACxD,GAEAJ,GAAkB,SAACK,GAAD,OAAoB,IAATA,EAAaA,EAAOA,EAAO,KACpB,IAA3BN,EAAe1C,QAEtB4C,WAAWC,OAAOC,iBAAiBL,EAAezC,SAAS+C,OACzDH,WAAWC,OAAOC,iBAAiBN,EAAUxC,SAAS+C,OACxD,KAEAJ,GAAkB,SAACK,GAAD,OAAUA,EAAO,KAED,IAA3BN,EAAe1C,QAEtB4C,WAAWC,OAAOC,iBAAiBL,EAAezC,SAAS+C,OACzDH,WAAWC,OAAOC,iBAAiBN,EAAUxC,SAAS+C,OACxD,KAEAJ,GAAkB,SAACK,GAAD,OAAUA,EAAO,KAGrCJ,WAAWC,OAAOC,iBAAiBL,EAAezC,SAAS+C,OACzDH,WAAWC,OAAOC,iBAAiBN,EAAUxC,SAAS+C,OACxD,IAEAJ,GAAkB,SAACK,GAAD,OAAUA,EAAO,KA0JxB0C,MAtJf,YAAuC,IAAhBtG,EAAe,EAAfA,YACfuG,EAAUR,IAChB,EAA4CjC,mBAAS,GAArD,mBAAOR,EAAP,KAAuBC,EAAvB,KACMQ,EAAwBC,iBAAOV,GACrCS,EAAsBnD,QAAU0C,EAEhC,IAAMlD,EAAQC,cAER+C,EAAYY,mBACZX,EAAiBW,mBAEvBC,qBAAU,WACRd,EACEC,EACAC,EACAU,EACAR,KAED,CAACD,IAEJW,qBAAU,WACR,SAASC,IACPf,EACEC,EACAC,EACAU,EACAR,GAIJ,OADAE,OAAOU,iBAAiB,SAAUD,GAC3B,kBAAMT,OAAOW,oBAAoB,SAAUF,MACjD,IAEH,IAAQG,EAASC,cAATD,KACR,EAAgCP,mBAAS,MAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KAEA,EAAmBvE,qBAAWC,KAAvBC,EAAP,oBAEA,OACE,qCACGoE,EACD,eAACE,EAAA,EAAD,CAAMpD,UAAW,EAAGC,MAAO,CAAEoD,UAAWtE,EAAMoB,QAAQ,IAAtD,UACE,cAACmD,EAAA,EAAD,CAAYC,MAAM,mBAClB,cAACC,EAAA,EAAD,CACExD,UAAW,EACXC,MAAO,CACLY,QAAS,QAHb,SAMGlC,EAAYwG,MACVzB,MAAM,EAAGzB,EAAiB,GAC1B0B,KAAI,SAACC,EAAOC,GACX,IAIMuB,EAJO,IAAI9F,KAC4B,KAA1CsE,EAAMpE,GAAKb,EAAYc,kBAGTC,eAAe,QAAS,CACvC2F,QAAS,QACTD,IAAK,YAGP,OACE,qBAEEtB,IAAe,IAAVD,EAAc7B,EAAiB,KACpC/B,MAAO,CACL8D,SAAU,IACVlD,QAAS,OACTmD,WAAY,SACZlD,eAAgB,UAPpB,SAUE,eAACf,EAAA,EAAD,CACE+D,IAAe,IAAVD,EAAc9B,EAAY,KAC/BvB,QAAQ,WACRP,MAAO,CACLY,QAAS,cACTmD,WAAY,SACZ1B,MAAO,IACPpC,QAAQ,GAAD,OAAKnB,EAAMoB,QAAQ,GAAnB,cAA2BpB,EAAMoB,QAAQ,GAAzC,MACP8D,cAAe,SACfnD,eAAgB,UATpB,UAYE,cAACV,EAAA,EAAD,CAAYI,QAAQ,KAAKD,UAAU,IAAnC,SACG6E,IAEH,sBAAKnF,MAAO,CAAEY,QAAS,OAAQmD,WAAY,UAA3C,UACE,cAAC5D,EAAA,EAAD,CACEI,QAAQ,KACRD,UAAU,IACVN,MAAO,CAAEiE,OAAO,GAAD,OAAKnF,EAAMoB,QAAQ,GAAnB,WAHjB,SAK4B,MAAzBrB,EAASiC,YACNC,KAAKC,MAAM2C,EAAM1C,KAAKkE,IAAM,QAAU,QACb,MAAzBtG,EAASiC,YACTC,KAAKC,MAAM2C,EAAM1C,KAAKkE,KAAO,IAC7BpE,KAAKC,MAAwB,EAAjB2C,EAAM1C,KAAKkE,IAAW,EAAI,QACtC,UAEN,cAAChF,EAAA,EAAD,CAAYkF,UAAWJ,EAAQN,OAA/B,SACG,cAEH,cAACxE,EAAA,EAAD,CAAYkF,UAAWJ,EAAQF,MAA/B,SAC4B,MAAzBlG,EAASiC,YACNC,KAAKC,MAAM2C,EAAM1C,KAAKqE,MAAQ,QAAU,QACf,MAAzBzG,EAASiC,YACTC,KAAKC,MAAM2C,EAAM1C,KAAKqE,OAAS,IAC/BvE,KAAKC,MAA0B,EAAnB2C,EAAM1C,KAAKqE,MAAa,EAAI,QACxC,aAGR,qBACEtF,MAAO,CACLiE,OAAO,GAAD,OAAKnF,EAAMoB,QAAQ,GAAnB,UACNmB,OAAQ,GACRgB,MAAO,GACP6B,UAAW,QACX5C,gBACyB,SAAvBxC,EAAMyC,QAAQC,KAAkB,UAAY,UAC9CC,aAAc,GAEhBC,IAAI,OACJC,IAAG,4CAAuCgC,EAAMxC,QAAQ,GAAGS,KAAxD,aAEL,sBAAK5B,MAAO,CAAEY,QAAS,OAAQmD,WAAY,UAA3C,UACE,cAAC,IAAD,CAAO1B,MAAO,KACd,eAAClC,EAAA,EAAD,CAAYI,QAAQ,KAAKD,UAAU,IAAnC,UACG,OACAS,KAAKC,MAAkB,IAAZ2C,EAAMQ,KAFpB,cAhECP,QA0Ef,cAACQ,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,QAAS,kBAAMpB,EAAY,cAAC,IAAD,CAAUqB,MAAI,EAACC,GAAE,UAAKzB,EAAL,cAC5C3C,MAAM,UAFR,kC,kBC1CKmF,MApGf,YAKI,IAJFC,EAIC,EAJDA,cACAC,EAGC,EAHDA,aACAjG,EAEC,EAFDA,gBACAkG,EACC,EADDA,YAEMC,EAAqBjD,mBACrBkD,EAAYlD,mBACZmD,EAAanD,mBACboD,EAAYpD,mBAEZ5D,EAAQC,cACRC,EAAoBC,YAAcH,EAAMI,YAAYC,KAAK,OACzD4G,EAAerD,iBAAO5D,GAC5BiH,EAAazG,QAAUR,EAEvB6D,qBAAU,YA3EZ,SAAwBqD,EAAQC,EAAiBC,GAC/CF,EAAO3D,MAAQ6D,EAAaD,EAAgBE,YAC5CH,EAAO3E,OAAwB,GAAf2E,EAAO3D,MACvB2D,EAAOhG,MAAMqC,MAAb,UAAwB2D,EAAO3D,MAAQ6D,EAAvC,MACAF,EAAOhG,MAAMqB,OAAb,UAAyB2E,EAAO3E,OAAS6E,EAAzC,MAyEEE,CAAeR,EAAUtG,QAASqG,EAAmBrG,QADlC,GAGnBuG,EAAWvG,QAAQU,MAAMqC,MAAQsD,EAAmBrG,QAAQ6G,YAAc,EAC1EL,EAAUxG,QAAQU,MAAMqC,MAAQsD,EAAmBrG,QAAQ6G,YAAc,IACxE,CAACnH,IAEJ,IAAMqH,EAAW3D,kBAAO,GAExB,SAAS4D,KA9EX,SAAcN,EAAQO,EAAaC,EAAYd,EAAa5G,GAC1D,GAAIkH,EAAQ,CACV,IAAMS,EAAIT,EAAOU,WAAW,MAC5BD,EAAEE,UAAU,EAAG,EAAGX,EAAO3D,MAAO2D,EAAO3E,QAEvCoF,EAAEG,QAAU,QACZH,EAAEI,UAAYb,EAAO3D,MAAQ,GAE7BoE,EAAEK,YACFL,EAAEM,IACAf,EAAO3D,MAAQ,EACE,GAAhB2D,EAAO3E,OAAe,GACvB2E,EAAO3D,MAAQ,GACdtB,KAAKiG,GACN,GAEFP,EAAEQ,YACuB,SAAvBnI,EAAMyC,QAAQC,KACV,wBACA,kBACNiF,EAAES,SAEF,IACIC,GAAgBzB,EAAca,IADpBC,EAAaD,GAE3BY,EAAeA,EAAe,EAAI,EAAIA,EAEtCV,EAAEI,UAAYb,EAAO3D,MAAQ,GAC7BoE,EAAEK,YACFK,EAAe,EAAI,IACjBV,EAAEM,IACAf,EAAO3D,MAAQ,EACE,GAAhB2D,EAAO3E,OAAe,GACvB2E,EAAO3D,MAAQ,GACdtB,KAAKiG,GAAKjG,KAAKiG,GAAK,KACpBjG,KAAKiG,GAAKjG,KAAKiG,GAAKG,EAAepG,KAAKiG,GAAK,KAGlD,IAAMI,EAAWX,EAAEY,qBACjB,EACA,EACCtG,KAAKiG,GAAKhB,EAAO3D,MAAS,EAC3B,GAEF+E,EAASE,aAAa,EAAG,wBACzBF,EAASE,aAAa,GAAK,yBAC3BF,EAASE,aAAa,EAAG,sBAEzBb,EAAEQ,YAAcG,EAChBX,EAAES,UA+BFK,CACE3B,EAAUtG,QACVkG,EACAC,EACAC,EACAK,EAAazG,SAEf+G,EAAS/G,SAAWkI,sBAAsBlB,GAG5C3D,qBAAU,WAER,OADA2D,IACO,WACLD,EAAS/G,SAAU,KAEpB,IAEH,IACMmI,EADc,IAAIpI,KAAyC,KAAnCmG,EAAgBhG,IACdC,eAAe,QAAS,CACtDC,KAAM,UACNC,OAAQ,UACRC,UAAW,QAIP8H,EADa,IAAIrI,KAAwC,KAAlCoG,EAAejG,IACdC,eAAe,QAAS,CACpDC,KAAM,UACNC,OAAQ,UACRC,UAAW,QAGb,OACE,eAACE,EAAA,EAAD,CACES,QAAQ,WACRP,MAAO,CACLC,QAASnB,EAAMoB,QAAQ,GACvBmC,MAAOrD,EAAoB,IAAM,IACjCqC,OAAQrC,EAAoB,IAAM,IAClC4B,QAAS,OACToD,cAAe,UAPnB,UAUE,qBAAKH,IAAK8B,EAAV,SACE,wBAAQ9B,IAAK+B,MAEf,sBAAK5F,MAAO,CAAEY,QAAS,OAAQC,eAAgB,iBAA/C,UACE,sBACEb,MAAO,CACLY,QAAS,OACToD,cAAe,SACfD,WAAY,SACZ4D,WAAY3I,EAAoB,EAAI,GALxC,UAQE,cAAC,IAAD,CAAS6E,IAAKgC,IACd,cAAC1F,EAAA,EAAD,UAAasH,OAEf,sBACEzH,MAAO,CACLY,QAAS,OACToD,cAAe,SACfD,WAAY,SACZ6D,YAAa5I,EAAoB,EAAI,GALzC,UAQE,cAAC,IAAD,CAAQ6E,IAAKiC,IACb,cAAC3F,EAAA,EAAD,UAAauH,c,yGCxIjBjD,EAAYC,aAAW,SAAC5F,GAAD,MAAY,CACvC+I,SAAU,CACRC,YAAa,GAEfC,KAAM,CACJ9H,QAAS,GAEX0E,OAAQ,CACNC,SAAU9F,EAAM+F,WAAWC,QAAQ,IACnC1E,MAAOtB,EAAMyC,QAAQyG,KAAKC,SAE5BlD,MAAO,CACLH,SAAU9F,EAAM+F,WAAWC,QAAQ,IACnC1E,MAAOtB,EAAMyC,QAAQyG,KAAKC,aAkNfC,MA9Mf,YAAsC,IAAhBxJ,EAAe,EAAfA,YACduG,EAAUR,IAChB,EAAmB9F,qBAAWC,KAAvBC,EAAP,oBACMC,EAAQC,cAEd,OACE,sBACEiB,MAAO,CACLY,QAAS,OACTC,eAAgB,gBAChBsH,SAAU,QAJd,UAOE,eAACC,EAAA,EAAD,CACE/C,UAAWJ,EAAQ8C,KACnB/H,MAAO,CACLqI,SAAU,IACVpE,OAAO,OAAD,OAASnF,EAAMoB,QAAQ,GAAvB,MACN4D,SAAU,KALd,UAQE,cAACwE,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAUlD,UAAWJ,EAAQ4C,SAA7B,UACE,cAACW,EAAA,EAAD,UACE,sBAAKxI,MAAO,CAAEY,QAAS,OAAQmD,WAAY,UAA3C,UACE,cAAC,IAAD,CAAgB1B,MAAO,KACvB,eAAClC,EAAA,EAAD,WAAa,WAAb,oBAGJ,cAACsI,EAAA,EAAD,UACE,sBAAKzI,MAAO,CAAEY,QAAS,OAAQmD,WAAY,UAA3C,UACE,cAAC5D,EAAA,EAAD,UAC4B,MAAzBtB,EAASiC,YACNC,KAAKC,MAAMtC,EAAYwG,MAAM,GAAGjE,KAAKkE,IAAM,QAAU,QAC5B,MAAzBtG,EAASiC,YACTC,KAAKC,MAAMtC,EAAYwG,MAAM,GAAGjE,KAAKkE,KAAO,IAC5CpE,KAAKC,MAC8B,EAAhCtC,EAAYwG,MAAM,GAAGjE,KAAKkE,IAAW,EAAI,QACxC,UAEV,cAAChF,EAAA,EAAD,CAAYkF,UAAWJ,EAAQN,OAA/B,SACG,cAEH,cAACxE,EAAA,EAAD,CAAYkF,UAAWJ,EAAQF,MAA/B,SAC4B,MAAzBlG,EAASiC,YACNC,KAAKC,MAAMtC,EAAYwG,MAAM,GAAGjE,KAAKqE,MAAQ,QAAU,QAC9B,MAAzBzG,EAASiC,YACTC,KAAKC,MAAMtC,EAAYwG,MAAM,GAAGjE,KAAKqE,OAAS,IAC9CvE,KAAKC,MACgC,EAAlCtC,EAAYwG,MAAM,GAAGjE,KAAKqE,MAAa,EAAI,QAC1C,kBAKhB,cAACgD,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAUlD,UAAWJ,EAAQ4C,SAA7B,UACE,cAACW,EAAA,EAAD,UACE,sBAAKxI,MAAO,CAAEY,QAAS,OAAQmD,WAAY,UAA3C,UACE,cAAC,IAAD,CAAM1B,MAAO,GAAIrC,MAAO,CAAE2H,YAAa,KACvC,eAACxH,EAAA,EAAD,WAAa,WAAb,wBAGJ,cAACsI,EAAA,EAAD,UACE,cAACtI,EAAA,EAAD,UACGY,KAAKC,MAAiC,IAA3BtC,EAAYwG,MAAM,GAAGf,KAAa,WAIpD,cAACmE,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAUlD,UAAWJ,EAAQ4C,SAA7B,UACE,cAACW,EAAA,EAAD,UACE,sBAAKxI,MAAO,CAAEY,QAAS,OAAQmD,WAAY,UAA3C,UACE,cAAC,IAAD,CAAgB1B,MAAO,KACvB,eAAClC,EAAA,EAAD,WAAa,WAAb,mBAGJ,cAACsI,EAAA,EAAD,UACE,cAACtI,EAAA,EAAD,UACyB,QAAtBtB,EAAS6J,SACNhK,EAAYwG,MAAM,GAAGwD,SAAW,OACV,QAAtB7J,EAAS6J,SACT3H,KAAKC,MAC8B,IAAhCtC,EAAYwG,MAAM,GAAGwD,SAAmB,WAEzC,IACF,OACA3H,KAAKC,MAAuC,IAAhCtC,EAAYwG,MAAM,GAAGwD,SAAkB,OACjD,IACF,eAIV,cAACJ,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAUlD,UAAWJ,EAAQ4C,SAA7B,UACE,cAACW,EAAA,EAAD,UACE,sBAAKxI,MAAO,CAAEY,QAAS,OAAQmD,WAAY,UAA3C,UACE,cAAC,IAAD,CAAY1B,MAAO,KACnB,eAAClC,EAAA,EAAD,WAAa,WAAb,qBAGJ,cAACsI,EAAA,EAAD,UACE,cAACtI,EAAA,EAAD,UACGzB,EAAYY,QAAQqJ,YAAc,IACT,MAAtB9J,EAAS+J,SACP,IAAMlK,EAAYY,QAAQqJ,WAAa,IACjB,OAAtB9J,EAAS+J,SACT,IACA7H,KAAKC,MAAwC,GAAjCtC,EAAYY,QAAQqJ,WAAmB,KACjD,GACF,KACA,IACA5H,KAAKC,MAAwC,GAAjCtC,EAAYY,QAAQqJ,WAAmB,MACjD,GACF,KACoB,MAAtB9J,EAAS+J,SACTlK,EAAYY,QAAQqJ,WAAa,IACX,OAAtB9J,EAAS+J,SACT7H,KAAKC,MAAwC,GAAjCtC,EAAYY,QAAQqJ,WAAmB,KACjD,GACF,KACA5H,KAAKC,MAAwC,GAAjCtC,EAAYY,QAAQqJ,WAAmB,MACjD,GACF,eAKZ,eAACP,EAAA,EAAD,CACE/C,UAAWJ,EAAQ8C,KACnB/H,MAAO,CACLqI,SAAU,IACVpE,OAAO,OAAD,OAASnF,EAAMoB,QAAQ,GAAvB,MACN4D,SAAU,KALd,UAQE,cAACwE,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAUlD,UAAWJ,EAAQ4C,SAA7B,UACE,cAACW,EAAA,EAAD,UACE,sBAAKxI,MAAO,CAAEY,QAAS,OAAQmD,WAAY,UAA3C,UACE,cAAC,IAAD,CAAO1B,MAAO,KACd,eAAClC,EAAA,EAAD,WAAa,WAAb,oBAGJ,cAACsI,EAAA,EAAD,UACE,cAACtI,EAAA,EAAD,UAC4B,MAAzBtB,EAASiC,YACNC,KAAKC,MAAMtC,EAAYwG,MAAM,GAAG2D,UAAY,QAAU,QAC7B,MAAzBhK,EAASiC,YACTC,KAAKC,MAAMtC,EAAYwG,MAAM,GAAG2D,WAAa,IAC7C9H,KAAKC,MAC+B,EAAjCtC,EAAYwG,MAAM,GAAG2D,UAAiB,EAAI,QACzC,eAId,cAACP,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAUlD,UAAWJ,EAAQ4C,SAA7B,UACE,cAACW,EAAA,EAAD,UACE,sBAAKxI,MAAO,CAAEY,QAAS,OAAQmD,WAAY,UAA3C,UACE,cAAC,IAAD,CAAK1B,MAAO,KACZ,eAAClC,EAAA,EAAD,WAAa,WAAb,mBAGJ,cAACsI,EAAA,EAAD,UACE,cAACtI,EAAA,EAAD,UAAazB,EAAYwG,MAAM,GAAG4D,WAGtC,cAACR,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAUlD,UAAWJ,EAAQ4C,SAA7B,UACE,cAACW,EAAA,EAAD,UACE,sBAAKxI,MAAO,CAAEY,QAAS,OAAQmD,WAAY,UAA3C,UACE,cAAC,IAAD,CAAM1B,MAAO,KACb,eAAClC,EAAA,EAAD,WAAa,WAAb,qBAGJ,cAACsI,EAAA,EAAD,UACE,cAACtI,EAAA,EAAD,UACsB,OAAnBtB,EAASkK,MACNhI,KAAKC,MAAwC,GAAlCtC,EAAYwG,MAAM,GAAG8D,YAAmB,GAAK,MACrC,QAAnBnK,EAASkK,MACThI,KAAKC,MAAwC,IAAlCtC,EAAYwG,MAAM,GAAG8D,WAAmB,IAAM,GACzD,MACAjI,KAAKC,MAAwC,MAAlCtC,EAAYwG,MAAM,GAAG8D,WAAqB,IACnD,GACF,aAIV,cAACV,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAUlD,UAAWJ,EAAQ4C,SAA7B,UACE,cAACW,EAAA,EAAD,UACE,sBAAKxI,MAAO,CAAEY,QAAS,OAAQmD,WAAY,UAA3C,UACE,cAAC,IAAD,CAAW1B,MAAO,KAClB,eAAClC,EAAA,EAAD,WAAa,WAAb,yBAGJ,cAACsI,EAAA,EAAD,UACE,eAACtI,EAAA,EAAD,WAAazB,EAAYwG,MAAM,GAAG+D,SAAlC,sBC3KGC,MA3Df,YAAgD,IAAhBxK,EAAe,EAAfA,YAC9B,EAAmBC,qBAAWC,KAAvBC,EAAP,oBACMC,EAAQC,cACd,OACE,eAACe,EAAA,EAAD,CACEC,UAAW,EACXC,MAAO,CACLoD,UAAWtE,EAAMoB,QAAQ,GACzBiJ,cAAerK,EAAMoB,QAAQ,IAJjC,UAOE,sBACEF,MAAO,CACLY,QAAS,OACTC,eAAgB,gBAChBR,aAAcvB,EAAMoB,QAAQ,GAC5BD,QAASnB,EAAMoB,QAAQ,IAL3B,UAQE,sBACEF,MAAO,CACLY,QAAS,OACToD,cAAe,SACfnD,eAAgB,gBAChB+G,YAAa,IALjB,UAQE,eAACzH,EAAA,EAAD,CAAYI,QAAQ,KAAKD,UAAU,IAAnC,8BACoB5B,EAAY8B,KADhC,KACwC9B,EAAY+B,WAEpD,sBACET,MAAO,CAAEY,QAAS,OAAQoD,cAAe,SAAUZ,UAAW,IADhE,UAGE,cAACjD,EAAA,EAAD,CAAYI,QAAQ,KAAKD,UAAU,IAAnC,SAC4B,MAAzBzB,EAASiC,YACNC,KAAKC,MAAMtC,EAAYY,QAAQ8J,WAAa,QAAU,QAC7B,MAAzBvK,EAASiC,YACTC,KAAKC,MAAMtC,EAAYY,QAAQ8J,YAAc,IAC7CrI,KAAKC,MAC+B,EAAjCtC,EAAYY,QAAQ8J,WAAkB,EAAI,QACzC,UAEV,cAACjJ,EAAA,EAAD,CAAYC,MAAM,gBAAgBG,QAAQ,KAAKD,UAAU,IAAzD,8BAKJ,cAAC,EAAD,CACEkF,cAAe9G,EAAYY,QAAQ+J,QACnC5D,aAAc/G,EAAYY,QAAQgK,OAClC9J,gBAAiBd,EAAYc,gBAC7BkG,YAAahH,EAAYY,QAAQC,QAGrC,cAAC,EAAD,CAAYb,YAAaA,QCvChB6K,MAff,YAAmD,IAAhC7K,EAA+B,EAA/BA,YAAa8K,EAAkB,EAAlBA,eAK9B,OAJA7G,qBAAU,WACR6G,EAAe,KACd,IAGD,qCACE,cAAC,EAAD,CAAsB9K,YAAaA,IACnC,cAAC,EAAD,CAAsBA,YAAaA,IACnC,cAAC,EAAD,CAAcA,YAAaA,IAC3B,cAAC,EAAD,CAAaA,YAAaA,Q,8CCb1B+F,GAAYC,aAAW,SAAC5F,GAAD,MAAY,CACvC2K,cAAe,CACbrJ,MAAOtB,EAAMyC,QAAQyG,KAAK0B,WAE5BC,eAAgB,CACdvJ,MAAOtB,EAAMyC,QAAQyG,KAAKC,aAiBf2B,OAbf,YAAuD,IAAlCH,EAAiC,EAAjCA,cAAeE,EAAkB,EAAlBA,eAC5B1E,EAAUR,KAEhB,OACE,sBAAKzE,MAAO,CAAEY,QAAS,OAAQoD,cAAe,SAAU3B,MAAO,KAA/D,UACE,cAAClC,EAAA,EAAD,CAAYkF,UAAWJ,EAAQwE,cAA/B,SAA+CA,IAC/C,cAACtJ,EAAA,EAAD,CAAYkF,UAAWJ,EAAQ0E,eAAgBpJ,QAAQ,KAAKD,UAAU,IAAtE,SACGqJ,QCHHlF,GAAYC,aAAW,SAAC5F,GAAD,MAAY,CACvC+K,KAAM,CACJxH,MAAO,QAETyH,OAAO,aACLlF,SAAU9F,EAAM+F,WAAWC,QAAQ,IACnC1E,MAAOtB,EAAMyC,QAAQyG,KAAKC,SACzBnJ,EAAMI,YAAYC,KAAK,MAAQ,CAC9ByF,SAAU9F,EAAM+F,WAAWC,QAAQ,MAGvCiF,YAAY,aACVnF,SAAU9F,EAAM+F,WAAWC,QAAQ,IACnCkF,WAAY,MACZ5J,MAAOtB,EAAMyC,QAAQyG,KAAKC,SACzBnJ,EAAMI,YAAYC,KAAK,MAAQ,CAC9ByF,SAAU9F,EAAM+F,WAAWC,QAAQ,MAGvCmF,eAAgB,CACdpJ,eAAgB,gBAChBkD,WAAY,cAgSDmG,OA5Rf,YAAkD,IAAhCxL,EAA+B,EAA/BA,YAAa8K,EAAkB,EAAlBA,eAC7B7G,qBAAU,WACR6G,EAAe,KACd,IAEH,IAYIW,EAZJ,EAAmBxL,qBAAWC,KAAvBC,EAAP,oBAEMC,EAAQC,cACRC,EAAoBC,YAAcH,EAAMI,YAAYC,KAAK,OAEzD8F,EAAUR,KAChB,EAAgCjC,oBAAS,GAAzC,mBAAO4H,EAAP,KAAiBC,EAAjB,KAQA,OACE,qCACE,cAAC,EAAD,CAAsB3L,YAAaA,IACnC,cAACoB,EAAA,EAAD,CACEC,UAAW,EACXC,MAAO,CAAEoD,UAAWtE,EAAMoB,QAAQ,GAAID,QAASnB,EAAMoB,QAAQ,IAC7DmF,UAAWJ,EAAQ4E,KAHrB,SAKGnL,EAAY8E,OAAOC,MAAM,GAAGC,KAAI,SAACC,EAAOC,GACvC,IAAM0G,EAAO,IAAIjL,KAC4B,KAA1CsE,EAAMpE,GAAKb,EAAYc,kBAEpBJ,EAAOkL,EAAK7K,eAAe,QAAS,CACxCC,KAAM,UACNC,OAAQ,UACRC,UAAW,QAGPuF,EAAMmF,EAAK7K,eAAe,QAAS,CACvC2F,QAAS,SAGPmF,IAAcJ,IAAYhF,GAC9BgF,EAAUhF,EAEV,IA/BcqF,EA+BRC,EAAWH,EAAK7K,eAAe,QAAS,CAC5C2F,QAAS,OACTD,IAAK,UACLuF,MAAO,SAGT,OACE,eAAC,IAAMC,SAAP,WACGJ,GACC,cAACpK,EAAA,EAAD,CACEH,MAAO,CAAEiE,OAAQnF,EAAMoB,QAAQ,IAC/BI,UAAU,IACVC,QAAQ,KAHV,SAKGkK,IAGL,eAACG,EAAA,EAAD,CACEC,gBAAiB,CAAEC,eAAe,GAClC/K,UAAW,EACXqK,SAAUA,IAAaxG,EACvBmH,UApDQP,EAoDe5G,EApDL,SAACoH,EAAOC,GACtCZ,IAAYY,GAAaT,KA+Cf,UAME,eAACU,EAAA,EAAD,CACEjG,QAAS,CAAEkG,QAASlG,EAAQgF,gBAC5BmB,WAAY,cAAC,KAAD,IAFd,UAIE,sBACEpL,MAAO,CACLY,QAAS,OACTmD,WAAY,UAHhB,UAME,cAAC5D,EAAA,EAAD,CACEH,MAAO,CAAE4H,YAAa5I,EAAoB,MAAQ,IAClDqG,UAAWJ,EAAQ6E,OAFrB,SAIG1K,IAEH,cAACe,EAAA,EAAD,CAAYkF,UAAWJ,EAAQ8E,YAA/B,SAC4B,MAAzBlL,EAASiC,YACNC,KAAKC,MAAM2C,EAAM1C,KAAO,QAAU,QACT,MAAzBpC,EAASiC,YACTC,KAAKC,MAAM2C,EAAM1C,MAAQ,IACzBF,KAAKC,MAAoB,EAAb2C,EAAM1C,KAAY,EAAI,QAAU,aAGpD,sBACEjB,MAAO,CACLY,QAAS,OACTmD,WAAY,SACZsH,UAAWrM,EAAoB,SAAW,OAJ9C,UAOE,qBACEgB,MAAO,CACLqB,OAAQ,GACRgB,MAAO,GACP6B,UAAW,QACX5C,gBACyB,SAAvBxC,EAAMyC,QAAQC,KAAkB,UAAY,UAC9CC,aAAc,GAEhBC,IAAI,OACJC,IAAG,4CAAuCgC,EAAMxC,QAAQ,GAAGS,KAAxD,aAEJ5C,GACC,cAACmB,EAAA,EAAD,CACEH,MAAO,CAAEkB,cAAe,aAAcyG,WAAY,IAClDtC,UAAWJ,EAAQ6E,OAFrB,SAIGnG,EAAMxC,QAAQ,GAAGC,oBAK1B,cAACkK,EAAA,EAAD,UACE,eAACxL,EAAA,EAAD,CACES,QAAQ,WACRP,MAAO,CAAEqC,MAAO,OAAQpC,QAAS,YAFnC,UAIE,sBACED,MAAO,CACLY,QAAS,OACTyB,MAAO,OACP8F,SAAU,QAJd,UAOE,sBACEnI,MAAO,CACLY,QAAS,OACTC,eAAgB,eAChBiD,SAAU,IACVG,OAAQ,aALZ,UAQE,cAAC,GAAD,CACEwF,cAAc,aACdE,eAC2B,MAAzB9K,EAASiC,YACLC,KAAKC,MAAM2C,EAAMyF,WAAa,QAAU,QACf,MAAzBvK,EAASiC,YACTC,KAAKC,MAAM2C,EAAMyF,YAAc,IAC/BrI,KAAKC,MACiB,EAAnB2C,EAAMyF,WAAkB,EAAI,QAC3B,UAGZ,cAAC,GAAD,CACEK,cAAc,gBACdE,eAAgB5I,KAAKC,MAAkB,IAAZ2C,EAAMQ,KAAa,SAGlD,sBACEnE,MAAO,CACLY,QAAS,OACTC,eAAgB,eAChBiD,SAAU,IACVG,OAAQ,aALZ,UAQE,cAAC,GAAD,CACEwF,cAAc,WACdE,eAAgBhG,EAAM4H,SAAW,MAEnC,cAAC,GAAD,CACE9B,cAAc,WACdE,eACwB,QAAtB9K,EAAS6J,SACL/E,EAAM+E,SAAW,OACK,QAAtB7J,EAAS6J,SACT3H,KAAKC,MACe,IAAjB2C,EAAM+E,SAAmB,WAE1B,IACF,OACA3H,KAAKC,MAAwB,IAAjB2C,EAAM+E,SAAkB,OAClC,IACF,gBAKZ,qBACE1I,MAAO,CACLY,QAAS,OACTC,eAAgB,gBAChBwB,MAAO,UAGX,sBACErC,MAAO,CACLY,QAAS,OACTyB,MAAO,OACP8F,SAAU,QAJd,UAOE,sBACEnI,MAAO,CACLY,QAAS,OACTC,eAAgB,eAChBiD,SAAU,IACVG,OAAQ,aALZ,UAQE,cAAC,GAAD,CACEwF,cAAc,aACdE,eACEhG,EAAMgF,YAAc,IACM,MAAtB9J,EAAS+J,SACP,IAAMjF,EAAMgF,WAAa,IACH,OAAtB9J,EAAS+J,SACT,IACA7H,KAAKC,MAA0B,GAAnB2C,EAAMgF,WAAmB,KACnC,GACF,KACA,IACA5H,KAAKC,MAA0B,GAAnB2C,EAAMgF,WAAmB,MACnC,GACF,KACoB,MAAtB9J,EAAS+J,SACTjF,EAAMgF,WAAa,IACG,OAAtB9J,EAAS+J,SACT7H,KAAKC,MAA0B,GAAnB2C,EAAMgF,WAAmB,KACnC,GACF,KACA5H,KAAKC,MAA0B,GAAnB2C,EAAMgF,WAAmB,MACnC,GACF,OAGR,cAAC,GAAD,CACEc,cAAc,SACdE,eAAgBhG,EAAM6H,OAAS,SAGnC,sBACExL,MAAO,CACLY,QAAS,OACTC,eAAgB,eAChBiD,SAAU,IACVG,OAAQ,aALZ,UAQE,cAAC,GAAD,CACEwF,cAAc,aACdE,eACqB,OAAnB9K,EAASkK,MACLhI,KAAKC,MAAyB,GAAnB2C,EAAMqF,YAAmB,GAAK,MACtB,QAAnBnK,EAASkK,MACThI,KAAKC,MAAyB,IAAnB2C,EAAMqF,WAAmB,IAAM,GAC1C,MACAjI,KAAKC,MAAyB,MAAnB2C,EAAMqF,WAAqB,IAAM,GAC5C,QAGR,cAAC,GAAD,CACES,cAAc,iBACdE,eAAgBhG,EAAMsF,SAAW,eAIvC,qBACEjJ,MAAO,CACLY,QAAS,OACTC,eAAgB,gBAChBwB,MAAO,oBA3NEuB,YC5E3Ba,GAAYC,aAAW,SAAC5F,GAAD,MAAY,CACvC+K,KAAM,CACJxH,MAAO,QAEToJ,WAAW,aACT7G,SAAU9F,EAAM+F,WAAWC,QAAQ,IACnC1E,MAAOtB,EAAMyC,QAAQyG,KAAKC,SACzBnJ,EAAMI,YAAYC,KAAK,MAAQ,CAC9ByF,SAAU9F,EAAM+F,WAAWC,QAAQ,MAGvC4G,YAAY,aACV9G,SAAU9F,EAAM+F,WAAWC,QAAQ,IACnC1E,MAAOtB,EAAMyC,QAAQyG,KAAKC,SACzBnJ,EAAMI,YAAYC,KAAK,MAAQ,CAC9ByF,SAAU9F,EAAM+F,WAAWC,QAAQ,MAGvCiF,YAAY,aACVnF,SAAU9F,EAAM+F,WAAWC,QAAQ,IACnCkF,WAAY,MACZ5J,MAAOtB,EAAMyC,QAAQyG,KAAKC,SACzBnJ,EAAMI,YAAYC,KAAK,MAAQ,CAC9ByF,SAAU9F,EAAM+F,WAAWC,QAAQ,MAGvC6G,aAAa,aACX/G,SAAU9F,EAAM+F,WAAWC,QAAQ,IACnCkF,WAAY,MACZ5J,MAAOtB,EAAMyC,QAAQyG,KAAKC,SACzBnJ,EAAMI,YAAYC,KAAK,MAAQ,CAC9ByF,SAAU9F,EAAM+F,WAAWC,QAAQ,MAGvCmF,eAAgB,CACdpJ,eAAgB,gBAChBkD,WAAY,UAEd6H,YAAY,eACT9M,EAAMI,YAAYC,KAAK,MAAQ,CAC9Bc,QAAS,UAGb4L,cAAe,CACbzL,MAAOtB,EAAMyC,QAAQyG,KAAK0B,WAE5BoC,kBAAmB,CACjB1L,MAAOtB,EAAMyC,QAAQyG,KAAKC,aA8Sf8D,OA1Sf,YAAiD,IAAhCrN,EAA+B,EAA/BA,YAAa8K,EAAkB,EAAlBA,eAC5B7G,qBAAU,WACR6G,EAAe,KACd,IAEH,MAAmB7K,qBAAWC,KAAvBC,EAAP,oBAEMC,EAAQC,cACRC,EAAoBC,YAAcH,EAAMI,YAAYC,KAAK,OAEzD8F,EAAUR,KAChB,EAAgCjC,oBAAS,GAAzC,mBAAO4H,EAAP,KAAiBC,EAAjB,KAMA,OACE,qCACE,cAAC,EAAD,CAAsB3L,YAAaA,IACnC,cAACoB,EAAA,EAAD,CACEC,UAAW,EACXC,MAAO,CAAEoD,UAAWtE,EAAMoB,QAAQ,GAAID,QAASnB,EAAMoB,QAAQ,IAC7DmF,UAAWJ,EAAQ4E,KAHrB,SAKGnL,EAAYwG,MAAMxB,KAAI,SAACC,EAAOC,GAC7B,IAbc4G,EAiBRrF,EAJO,IAAI9F,KAC4B,KAA1CsE,EAAMpE,GAAKb,EAAYc,kBAGTC,eAAe,QAAS,CACvC2F,QAASpG,EAAoB,QAAU,OACvCmG,IAAK,YAGP,OACE,eAACyF,EAAA,EAAD,CACEC,gBAAiB,CAAEC,eAAe,GAClC/K,UAAW,EAEXqK,SAAUA,IAAaxG,EACvBmH,UA5BUP,EA4Ba5G,EA5BH,SAACoH,EAAOC,GACtCZ,IAAYY,GAAaT,KAsBjB,UAOE,eAACU,EAAA,EAAD,CACEjG,QAAS,CACPkG,QAASlG,EAAQgF,eACjBJ,KAAM5E,EAAQ2G,aAEhBR,WAAY,cAAC,KAAD,IALd,UAOE,sBACEpL,MAAO,CACLY,QAAS,OACTC,eAAgB,gBAChBwB,MAAOrD,EAAoB,OAAS,mBACpC+E,WAAY,UALhB,UAQE,qBACE/D,MAAO,CACLqC,MAAOrD,EAAoB,GAAK,IAChCgN,WAAY,KAHhB,SAME,cAAC7L,EAAA,EAAD,CAAYkF,UAAWJ,EAAQwG,WAA/B,SACGtG,MAGL,sBACEnF,MAAO,CACL2H,WAAY3I,EAAoB,MAAQ,GACxCqD,MAAO,IACP2J,WAAY,IACZpL,QAAS,OACTmD,WAAY,UANhB,UASE,cAAC5D,EAAA,EAAD,CAAYkF,UAAWJ,EAAQ8E,YAA/B,SAC4B,MAAzBlL,EAASiC,YACNC,KAAKC,MAAM2C,EAAM1C,KAAKkE,IAAM,QAAU,QACb,MAAzBtG,EAASiC,YACTC,KAAKC,MAAM2C,EAAM1C,KAAKkE,KAAO,IAC7BpE,KAAKC,MAAwB,EAAjB2C,EAAM1C,KAAKkE,IAAW,EAAI,QAAU,UAEtD,cAAChF,EAAA,EAAD,CAAYkF,UAAWJ,EAAQ0G,aAA/B,SACG,cAEH,cAACxL,EAAA,EAAD,CAAYkF,UAAWJ,EAAQyG,YAA/B,SAC4B,MAAzB7M,EAASiC,YACNC,KAAKC,MAAM2C,EAAM1C,KAAKqE,MAAQ,QAAU,QACf,MAAzBzG,EAASiC,YACTC,KAAKC,MAAM2C,EAAM1C,KAAKqE,OAAS,IAC/BvE,KAAKC,MAA0B,EAAnB2C,EAAM1C,KAAKqE,MAAa,EAAI,QACxC,gBAIV,sBACEtF,MAAO,CACLY,QAAS,OACTmD,WAAY,SACZsH,UAAWrM,EAAoB,SAAW,OAJ9C,UAOE,qBACEgB,MAAO,CACLqB,OAAQ,GACRgB,MAAO,GACP6B,UAAW,QACX5C,gBACyB,SAAvBxC,EAAMyC,QAAQC,KAAkB,UAAY,UAC9CC,aAAc,GAEhBC,IAAI,OACJC,IAAG,4CAAuCgC,EAAMxC,QAAQ,GAAGS,KAAxD,aAEJ5C,GACC,cAACmB,EAAA,EAAD,CACEH,MAAO,CAAEkB,cAAe,aAAcyG,WAAY,IAClDtC,UAAWJ,EAAQ6E,OAFrB,SAIGnG,EAAMxC,QAAQ,GAAGC,oBAK1B,cAACkK,EAAA,EAAD,UACE,eAACxL,EAAA,EAAD,CACES,QAAQ,WACRP,MAAO,CAAEqC,MAAO,OAAQpC,QAAS,YAFnC,UAIE,sBACED,MAAO,CACLY,QAAS,OACTyB,MAAO,OACP8F,SAAU,QAJd,UAOE,sBACEnI,MAAO,CACLY,QAAS,OACTC,eAAgB,eAChBiD,SAAU,IACVG,OAAQ,aALZ,UAQE,sBACEjE,MAAO,CACLY,QAAS,OACToD,cAAe,SACf3B,MAAO,KAJX,UAOE,cAAClC,EAAA,EAAD,CAAYkF,UAAWJ,EAAQ4G,cAA/B,wBAGA,sBAAK7L,MAAO,CAAEY,QAAS,OAAQmD,WAAY,UAA3C,UACE,cAAC5D,EAAA,EAAD,CACEkF,UAAWJ,EAAQ6G,kBACnBvL,QAAQ,KACRD,UAAU,IAHZ,SAK4B,MAAzBzB,EAASiC,YACNC,KAAKC,MAAM2C,EAAMyF,WAAWjE,IAAM,QAAU,QACnB,MAAzBtG,EAASiC,YACTC,KAAKC,MAAM2C,EAAMyF,WAAWjE,KAAO,IACnCpE,KAAKC,MACqB,EAAvB2C,EAAMyF,WAAWjE,IAAW,EAAI,QAC/B,UAEV,cAAChF,EAAA,EAAD,CAAYkF,UAAWJ,EAAQ0G,aAA/B,SACG,cAEH,cAACxL,EAAA,EAAD,CAAYkF,UAAWJ,EAAQyG,YAA/B,SAC4B,MAAzB7M,EAASiC,YACNC,KAAKC,MAAM2C,EAAMyF,WAAW9D,MAAQ,QACpC,QACyB,MAAzBzG,EAASiC,YACTC,KAAKC,MAAM2C,EAAMyF,WAAW9D,OAAS,IACrCvE,KAAKC,MACuB,EAAzB2C,EAAMyF,WAAW9D,MAAa,EAAI,QACjC,gBAId,cAAC,GAAD,CACEmE,cAAc,gBACdE,eAAgB5I,KAAKC,MAAkB,IAAZ2C,EAAMQ,KAAa,SAGlD,sBACEnE,MAAO,CACLY,QAAS,OACTC,eAAgB,eAChBiD,SAAU,IACVG,OAAQ,aALZ,UAQE,cAAC,GAAD,CACEwF,cAAc,WACdE,eAAgBhG,EAAM4H,SAAW,MAEnC,cAAC,GAAD,CACE9B,cAAc,WACdE,eACwB,QAAtB9K,EAAS6J,SACL/E,EAAM+E,SAAW,OACK,QAAtB7J,EAAS6J,SACT3H,KAAKC,MAAwB,IAAjB2C,EAAM+E,SAAmB,WACnC,IACF,OACA3H,KAAKC,MAAwB,IAAjB2C,EAAM+E,SAAkB,OAAS,IAC7C,gBAKZ,qBACE1I,MAAO,CACLY,QAAS,OACTC,eAAgB,gBAChBwB,MAAO,UAGX,sBACErC,MAAO,CACLY,QAAS,OACTyB,MAAO,OACP8F,SAAU,QAJd,UAOE,sBACEnI,MAAO,CACLY,QAAS,OACTC,eAAgB,eAChBiD,SAAU,IACVG,OAAQ,aALZ,UAQE,cAAC,GAAD,CACEwF,cAAc,YACdE,eAC2B,MAAzB9K,EAASiC,YACLC,KAAKC,MAAM2C,EAAMkF,UAAY,QAAU,QACd,MAAzBhK,EAASiC,YACTC,KAAKC,MAAM2C,EAAMkF,WAAa,IAC9B9H,KAAKC,MAAyB,EAAlB2C,EAAMkF,UAAiB,EAAI,QACvC,UAGR,cAAC,GAAD,CACEY,cAAc,SACdE,eAAgBhG,EAAM6H,OAAS,SAGnC,sBACExL,MAAO,CACLY,QAAS,OACTC,eAAgB,eAChBiD,SAAU,IACVG,OAAQ,aALZ,UAQE,cAAC,GAAD,CACEwF,cAAc,aACdE,eACqB,OAAnB9K,EAASkK,MACLhI,KAAKC,MAAyB,GAAnB2C,EAAMqF,YAAmB,GAAK,MACtB,QAAnBnK,EAASkK,MACThI,KAAKC,MAAyB,IAAnB2C,EAAMqF,WAAmB,IAAM,GAC1C,MACAjI,KAAKC,MAAyB,MAAnB2C,EAAMqF,WAAqB,IAAM,GAC5C,QAGR,cAAC,GAAD,CACES,cAAc,iBACdE,eAAgBhG,EAAMsF,SAAW,eAIvC,qBACEjJ,MAAO,CACLY,QAAS,OACTC,eAAgB,gBAChBwB,MAAO,iBAtPVuB,Y,oECpGnB,SAASqI,GAAaC,EAAWC,EAAQC,EAAe1I,EAAK2I,GACzC,IAAdA,IACFF,EAASD,GAIXxI,EAAIpE,QAAQgN,UAAWJ,EAAYC,GAAU,IAAO,IAAK,CAAEI,SAAU,IAErEH,EAAc9M,SACZkI,uBAAsB,SAAC0E,GAAD,OACpBD,GAAaC,EAAWC,EAAQC,EAAe1I,EAAK2I,EAAY,MA8FvDG,OA1Ff,YAA0B,IAAXC,EAAU,EAAVA,OACP3N,EAAQC,cACR2E,EAAMhB,mBACNgK,EAAiBhK,mBAEjB0J,EAAgB1J,kBAAO,GAEvBiK,EAAiBhO,qBAAWiO,KAAgBD,eAE5C3N,EAAoBC,YAAcH,EAAMI,YAAYC,KAAK,OACzD0N,EAA2BnK,iBAAO1D,GACxC6N,EAAyBvN,QAAUN,EACnC,MAAsCwD,mBAAS,GAA/C,mBAAOsK,EAAP,KAAoBC,EAApB,KAoEA,OAlEApK,qBAAU,WACR,SAASC,IACP,IAAMoK,EAAeC,SAASC,cAAc,QAC5CH,EACEF,EAAyBvN,QACrB0N,EAAaG,YAAc,EAC3BH,EAAaG,aAEnBzJ,EAAIpE,QAAQ8N,SAGd,OADAjL,OAAOU,iBAAiB,SAAUD,GAC3B,kBAAMT,OAAOW,oBAAoB,SAAUF,MACjD,IAEHD,qBAAU,WAAO,IAAD,EACTe,EAAIpE,QAkCPoE,EAAIpE,QAAQ+N,SACa,SAAvBvO,EAAMyC,QAAQC,KACV,kCACA,qCApCN8L,KAASC,YAAcZ,EAEvBjJ,EAAIpE,QAAU,IAAIgO,KAASd,IAAI,CAC7BgB,UAAW,MACXxN,MACyB,SAAvBlB,EAAMyC,QAAQC,KACV,kCACA,mCACNiM,OAAQ,CAAChB,EAAO9L,IAAK8L,EAAO/L,KAC5BgN,KAAM,GACNC,MAAO,GACPC,QAAS,EACTC,oBAAoB,IAGtBnK,EAAIpE,QAAQwO,GAAG,QAAQ,WAErB7B,GAAa,EAAG,EAAGG,EAAe1I,EAAK,GACvC,IAAMsJ,EAAeC,SAASC,cAAc,QAC5CH,EACEF,EAAyBvN,QACrB0N,EAAaG,YAAc,EAC3BH,EAAaG,aAEnBzJ,EAAIpE,QAAQ8N,YAGd1J,EAAIpE,QAAQyO,WACV,IAAIT,KAASU,kBAAkB,CAC7BC,gBAAgB,MAWtB,UAAAvB,EAAepN,eAAf,SAAwB4O,SACxBxB,EAAepN,QAAU,IAAIgO,KAASa,OAAO,CAC3C/N,MAAOtB,EAAMyC,QAAQ0G,QAAQmG,OAE5BC,UAAU,CAAC5B,EAAO9L,IAAK8L,EAAO/L,MAC9B4N,MAAM5K,EAAIpE,WACZ,CAACR,IAEJ6D,qBAAU,kBAAM,kBAAOyJ,EAAc9M,SAAU,KAAQ,IAGrD,cAACQ,EAAA,EAAD,CACEC,UAAW,EACXwO,GAAG,MACHvO,MAAO,CAAEqC,MAAO,OAAQhB,OAAQyL,GAChC0B,YAAa,kBAAOpC,EAAc9M,SAAU,M,8CC/FlD,WAAoCiP,EAAIE,EAAgBC,EAASC,GAAjE,mBAAAC,EAAA,sEAE8CC,MAAM,sDAAD,OACON,EADP,kBACmBG,IAHtE,WAEQI,EAFR,QAMqCC,GANrC,uBAOIJ,EAAQpK,KAAK,KAPjB,0CAYUuK,EAA8BE,OAZxC,cAWQC,EAXR,iBAeUJ,MAAM,uDAAD,OAC8CI,EAAkCC,MAAMxO,IADtF,gBACiGuO,EAAkCC,MAAMvO,IADzI,kBACsJ+N,IAhBrK,gCAkBIM,OAlBJ,QAcQG,EAdR,OAoBEV,EAAe,2BACVU,GADS,IAEZ3O,KAAMyO,EAAkCG,KACxC3O,QAASwO,EAAkCI,IAAI5O,WAGjD6O,aAAaC,QAAQ,KAAMhB,GA1B7B,6C,sBA4IeiB,UA/Gf,YAA8C,IAA1BC,EAAyB,EAAzBA,MAAOjG,EAAkB,EAAlBA,eACzB,EAAsChH,mBAAS,MAA/C,mBAAO9D,EAAP,KAAoB+P,EAApB,KACMC,EAAU/P,qBAAWiO,KAAgB8C,uBAE3C,EAAwClN,oBAAS,GAAjD,mBAAOmN,EAAP,KAAqBC,EAArB,KAEMjB,EAAUkB,cAMhB,OAJAlN,qBAAU,Y,2CACRmN,CAAqBL,EAAMM,OAAOxB,GAAIE,EAAgBC,EAASC,KAC9D,IAGD,qCACGjQ,GACC,cAACsR,GAAA,EAAD,CACEC,QAAQ,SACRzC,WAAS,EACTxN,MAAO,CAAEqC,MAAO,OAAQhB,OAAQ,OAAQ4C,OAAQ,eAHlD,SAKE,eAAC+L,GAAA,EAAD,CACExC,WAAS,EACT0C,MAAI,EACJC,GAAI,GACJC,GAAI,EACJrM,WAAW,aACXsM,aAAa,aACbnQ,QAAS,EAPX,UASE,cAAC8P,GAAA,EAAD,CAAME,MAAI,EAACI,GAAI,EAAGH,GAAI,GAAtB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEI,OAAK,EACLxN,KAAI,WAAM0M,EAAMM,OAAOxB,IACvBjI,OAAQ,SAACkK,GAAD,OACN,cAACC,EAAD,yBACEjH,eAAgBA,GACZgH,GAFN,IAGE9R,YAAaA,QAInB,cAAC,IAAD,CACE6R,OAAK,EACLxN,KAAI,WAAM0M,EAAMM,OAAOxB,GAAnB,WACJjI,OAAQ,SAACkK,GAAD,OACN,cAAC,GAAD,yBACEhH,eAAgBA,GACZgH,GAFN,IAGE9R,YAAaA,QAInB,cAAC,IAAD,CACE6R,OAAK,EACLxN,KAAI,WAAM0M,EAAMM,OAAOxB,GAAnB,UACJjI,OAAQ,SAACkK,GAAD,OACN,cAAC,GAAD,yBACEhH,eAAgBA,GACZgH,GAFN,IAGE9R,YAAaA,QAInB,cAAC,IAAD,CACEqE,KAAK,IACLuD,OAAQ,WACNqI,EAAQpK,KAAK,IAAMkL,EAAMM,OAAOxB,YAKxC,cAACyB,GAAA,EAAD,CAAME,MAAI,EAACI,GAAI,EAAGH,GAAI,GAAtB,SACE,cAAC,GAAD,CAAK1D,OAAQ,CAAE/L,IAAKhC,EAAYgC,IAAKC,IAAKjC,EAAYiC,cAK7DjC,GACC,cAACgS,GAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,SAAUC,WAAY,QAChDC,KAAMnB,EACNoB,iBAAkB,KAClBC,QAAS,kBAAMpB,GAAgB,IAJjC,SAME,cAAC,KAAD,CACE7P,UAAW,EACXQ,QAAQ,SACRyQ,QAAS,kBAAMpB,GAAgB,IAC/BqB,SAAS,UAJX,8BAUFvS,EAYE,KAXF,qBACEsB,MAAO,CACLY,QAAS,OACTC,eAAgB,SAChBkD,WAAY,SACZ1C,OAAQ,OACRgB,MAAO,QANX,SASE,cAAC6O,GAAA,EAAD","file":"static/js/6.f6c3b089.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Paper, Typography, useTheme, useMediaQuery } from \"@material-ui/core\";\r\nimport { SettingsContext } from \"../../App\";\r\n\r\nfunction CurrentWeatherWidget({ stationData }) {\r\n  const [settings] = useContext(SettingsContext);\r\n  const theme = useTheme();\r\n  const breakpointMatches = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n\r\n  const date = new Date(\r\n    (stationData.current.dt + stationData.timezone_offset) * 1000\r\n  );\r\n  const time = date.toLocaleString(\"en-GB\", {\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    hourCycle: \"h23\",\r\n  });\r\n\r\n  const utcOffset = stationData.timezone_offset / 3600;\r\n\r\n  return (\r\n    <Paper elevation={4} style={{ padding: theme.spacing(2) }}>\r\n      <Typography\r\n        color=\"textPrimary\"\r\n        style={{ marginBottom: 5 }}\r\n        component=\"h1\"\r\n        variant=\"h4\"\r\n      >\r\n        {stationData.city}, {stationData.country}\r\n      </Typography>\r\n      <Typography color=\"textSecondary\" component=\"p\" variant=\"caption\">\r\n        {stationData.lat}, {stationData.lon}\r\n      </Typography>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          marginBottom: 5,\r\n        }}\r\n      >\r\n        <div>\r\n          <Typography color=\"textPrimary\" component=\"p\" variant=\"h2\">\r\n            {settings.temperature === \"c\"\r\n              ? Math.round(stationData.current.temp - 273.15) + \"°C\"\r\n              : settings.temperature === \"k\"\r\n              ? Math.round(stationData.current.temp) + \"K\"\r\n              : Math.round((stationData.current.temp * 9) / 5 - 459.67) + \"°F\"}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            style={{ textTransform: \"capitalize\" }}\r\n            variant=\"h5\"\r\n            component=\"p\"\r\n          >\r\n            {stationData.current.weather[0].description}\r\n          </Typography>\r\n        </div>\r\n        <img\r\n          style={{\r\n            height: breakpointMatches ? 72 : 100,\r\n            backgroundColor:\r\n              theme.palette.type === \"dark\" ? \"#5072A7\" : \"#7CB9E8\",\r\n            borderRadius: 20,\r\n          }}\r\n          alt=\"icon\"\r\n          src={`https://openweathermap.org/img/wn/${stationData.current.weather[0].icon}@2x.png`}\r\n        />\r\n      </div>\r\n      <Typography color=\"textSecondary\" component=\"p\" variant=\"caption\">\r\n        As of {time} UTC {utcOffset > 0 ? `+${utcOffset}` : utcOffset}\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default CurrentWeatherWidget;\r\n","import React, { useState, useRef, useEffect, useContext } from \"react\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  useTheme,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardActions,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Redirect, useRouteMatch } from \"react-router-dom\";\r\nimport { SettingsContext } from \"../../App\";\r\nimport { CloudRain as Water } from \"@styled-icons/boxicons-regular/CloudRain\";\r\n\r\nfunction calculateCardAmount(\r\n  firstCard,\r\n  firstCardOuter,\r\n  amountToRender,\r\n  setAmountToRender\r\n) {\r\n  if (\r\n    parseFloat(window.getComputedStyle(firstCardOuter.current).width) -\r\n      parseFloat(window.getComputedStyle(firstCard.current).width) <\r\n    10\r\n  ) {\r\n    setAmountToRender((prev) => (prev === 1 ? prev : prev - 1));\r\n  } else if (amountToRender.current === 1) {\r\n    if (\r\n      parseFloat(window.getComputedStyle(firstCardOuter.current).width) -\r\n        parseFloat(window.getComputedStyle(firstCard.current).width) >\r\n      150\r\n    ) {\r\n      setAmountToRender((prev) => prev + 1);\r\n    }\r\n  } else if (amountToRender.current === 2) {\r\n    if (\r\n      parseFloat(window.getComputedStyle(firstCardOuter.current).width) -\r\n        parseFloat(window.getComputedStyle(firstCard.current).width) >\r\n      100\r\n    ) {\r\n      setAmountToRender((prev) => prev + 1);\r\n    }\r\n  } else if (\r\n    parseFloat(window.getComputedStyle(firstCardOuter.current).width) -\r\n      parseFloat(window.getComputedStyle(firstCard.current).width) >\r\n    65\r\n  ) {\r\n    setAmountToRender((prev) => prev + 1);\r\n  }\r\n}\r\n\r\nfunction HourlyWidget({ stationData }) {\r\n  const [amountToRender, setAmountToRender] = useState(1);\r\n  const amountToRenderPersist = useRef(amountToRender);\r\n  amountToRenderPersist.current = amountToRender;\r\n\r\n  const theme = useTheme();\r\n\r\n  const firstCard = useRef();\r\n  const firstCardOuter = useRef();\r\n\r\n  useEffect(() => {\r\n    calculateCardAmount(\r\n      firstCard,\r\n      firstCardOuter,\r\n      amountToRenderPersist,\r\n      setAmountToRender\r\n    );\r\n  }, [amountToRender]);\r\n\r\n  useEffect(() => {\r\n    function eventListenerFunction() {\r\n      calculateCardAmount(\r\n        firstCard,\r\n        firstCardOuter,\r\n        amountToRenderPersist,\r\n        setAmountToRender\r\n      );\r\n    }\r\n    window.addEventListener(\"resize\", eventListenerFunction);\r\n    return () => window.removeEventListener(\"resize\", eventListenerFunction);\r\n  }, []);\r\n\r\n  const { path } = useRouteMatch();\r\n  const [redirect, setRedirect] = useState(null);\r\n\r\n  const [settings] = useContext(SettingsContext);\r\n\r\n  return (\r\n    <>\r\n      {redirect}\r\n      <Card elevation={4} style={{ marginTop: theme.spacing(4) }}>\r\n        <CardHeader title=\"Hourly Forecast\"></CardHeader>\r\n        <CardContent\r\n          elevation={4}\r\n          style={{\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          {stationData.hourly\r\n            .slice(1, amountToRender + 1)\r\n            .map((entry, index) => {\r\n              const date = new Date(\r\n                (entry.dt + stationData.timezone_offset) * 1000\r\n              );\r\n\r\n              const time = date.toLocaleString(\"en-GB\", {\r\n                hour: \"numeric\",\r\n                minute: \"numeric\",\r\n                hourCycle: \"h23\",\r\n              });\r\n\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  ref={index === 0 ? firstCardOuter : null}\r\n                  style={{\r\n                    flexGrow: \"1\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Paper\r\n                    ref={index === 0 ? firstCard : null}\r\n                    variant=\"outlined\"\r\n                    style={{\r\n                      display: \"inline-flex\",\r\n                      alignItems: \"center\",\r\n                      width: 130,\r\n                      padding: `${theme.spacing(1)}px ${theme.spacing(1)}px`,\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"h6\" component=\"p\">\r\n                      {time}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"h4\"\r\n                      component=\"p\"\r\n                      style={{ margin: `${theme.spacing(1)}px 0px` }}\r\n                    >\r\n                      {settings.temperature === \"c\"\r\n                        ? Math.round(entry.temp - 273.15) + \"°C\"\r\n                        : settings.temperature === \"k\"\r\n                        ? Math.round(entry.temp) + \"K\"\r\n                        : Math.round((entry.temp * 9) / 5 - 459.67) + \"°F\"}\r\n                    </Typography>\r\n                    <img\r\n                      style={{\r\n                        margin: `${theme.spacing(1)}px 0px`,\r\n                        height: 32,\r\n                        width: 50,\r\n                        objectFit: \"cover\",\r\n                        backgroundColor:\r\n                          theme.palette.type === \"dark\" ? \"#909090\" : \"#DCDCDC\",\r\n                        borderRadius: 8,\r\n                      }}\r\n                      alt=\"icon\"\r\n                      src={`https://openweathermap.org/img/wn/${entry.weather[0].icon}@2x.png`}\r\n                    />\r\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                      <Water width={20} />\r\n                      <Typography variant=\"h6\" component=\"p\">\r\n                        {\"\\u00A0\"}\r\n                        {Math.round(entry.pop * 100)}%\r\n                      </Typography>\r\n                    </div>\r\n                  </Paper>\r\n                </div>\r\n              );\r\n            })}\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            onClick={() => setRedirect(<Redirect push to={`${path}/hourly`} />)}\r\n            color=\"primary\"\r\n          >\r\n            Next 48 Hours\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HourlyWidget;\r\n","import React, { useState, useRef, useEffect, useContext } from \"react\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  useTheme,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardActions,\r\n  Button,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Redirect, useRouteMatch } from \"react-router-dom\";\r\nimport { SettingsContext } from \"../../App\";\r\nimport { CloudRain as Water } from \"@styled-icons/boxicons-regular/CloudRain\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  medium: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n    },\r\n  },\r\n  small: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: theme.typography.pxToRem(12),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction calculateCardAmount(\r\n  firstCard,\r\n  firstCardOuter,\r\n  amountToRender,\r\n  setAmountToRender\r\n) {\r\n  if (\r\n    parseFloat(window.getComputedStyle(firstCardOuter.current).width) -\r\n      parseFloat(window.getComputedStyle(firstCard.current).width) <\r\n    10\r\n  ) {\r\n    setAmountToRender((prev) => (prev === 1 ? prev : prev - 1));\r\n  } else if (amountToRender.current === 1) {\r\n    if (\r\n      parseFloat(window.getComputedStyle(firstCardOuter.current).width) -\r\n        parseFloat(window.getComputedStyle(firstCard.current).width) >\r\n      150\r\n    ) {\r\n      setAmountToRender((prev) => prev + 1);\r\n    }\r\n  } else if (amountToRender.current === 2) {\r\n    if (\r\n      parseFloat(window.getComputedStyle(firstCardOuter.current).width) -\r\n        parseFloat(window.getComputedStyle(firstCard.current).width) >\r\n      100\r\n    ) {\r\n      setAmountToRender((prev) => prev + 1);\r\n    }\r\n  } else if (\r\n    parseFloat(window.getComputedStyle(firstCardOuter.current).width) -\r\n      parseFloat(window.getComputedStyle(firstCard.current).width) >\r\n    65\r\n  ) {\r\n    setAmountToRender((prev) => prev + 1);\r\n  }\r\n}\r\n\r\nfunction DailyWidget({ stationData }) {\r\n  const classes = useStyles();\r\n  const [amountToRender, setAmountToRender] = useState(1);\r\n  const amountToRenderPersist = useRef(amountToRender);\r\n  amountToRenderPersist.current = amountToRender;\r\n\r\n  const theme = useTheme();\r\n\r\n  const firstCard = useRef();\r\n  const firstCardOuter = useRef();\r\n\r\n  useEffect(() => {\r\n    calculateCardAmount(\r\n      firstCard,\r\n      firstCardOuter,\r\n      amountToRenderPersist,\r\n      setAmountToRender\r\n    );\r\n  }, [amountToRender]);\r\n\r\n  useEffect(() => {\r\n    function eventListenerFunction() {\r\n      calculateCardAmount(\r\n        firstCard,\r\n        firstCardOuter,\r\n        amountToRenderPersist,\r\n        setAmountToRender\r\n      );\r\n    }\r\n    window.addEventListener(\"resize\", eventListenerFunction);\r\n    return () => window.removeEventListener(\"resize\", eventListenerFunction);\r\n  }, []);\r\n\r\n  const { path } = useRouteMatch();\r\n  const [redirect, setRedirect] = useState(null);\r\n\r\n  const [settings] = useContext(SettingsContext);\r\n\r\n  return (\r\n    <>\r\n      {redirect}\r\n      <Card elevation={4} style={{ marginTop: theme.spacing(4) }}>\r\n        <CardHeader title=\"Daily Forecast\"></CardHeader>\r\n        <CardContent\r\n          elevation={4}\r\n          style={{\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          {stationData.daily\r\n            .slice(1, amountToRender + 1)\r\n            .map((entry, index) => {\r\n              const date = new Date(\r\n                (entry.dt + stationData.timezone_offset) * 1000\r\n              );\r\n\r\n              const day = date.toLocaleString(\"en-GB\", {\r\n                weekday: \"short\",\r\n                day: \"2-digit\",\r\n              });\r\n\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  ref={index === 0 ? firstCardOuter : null}\r\n                  style={{\r\n                    flexGrow: \"1\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Paper\r\n                    ref={index === 0 ? firstCard : null}\r\n                    variant=\"outlined\"\r\n                    style={{\r\n                      display: \"inline-flex\",\r\n                      alignItems: \"center\",\r\n                      width: 130,\r\n                      padding: `${theme.spacing(1)}px ${theme.spacing(1)}px`,\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"h6\" component=\"p\">\r\n                      {day}\r\n                    </Typography>\r\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                      <Typography\r\n                        variant=\"h5\"\r\n                        component=\"p\"\r\n                        style={{ margin: `${theme.spacing(1)}px 0px` }}\r\n                      >\r\n                        {settings.temperature === \"c\"\r\n                          ? Math.round(entry.temp.day - 273.15) + \"°C\"\r\n                          : settings.temperature === \"k\"\r\n                          ? Math.round(entry.temp.day) + \"K\"\r\n                          : Math.round((entry.temp.day * 9) / 5 - 459.67) +\r\n                            \"°F\"}\r\n                      </Typography>\r\n                      <Typography className={classes.medium}>\r\n                        {\"\\u00A0/\\u00A0\"}\r\n                      </Typography>\r\n                      <Typography className={classes.small}>\r\n                        {settings.temperature === \"c\"\r\n                          ? Math.round(entry.temp.night - 273.15) + \"°C\"\r\n                          : settings.temperature === \"k\"\r\n                          ? Math.round(entry.temp.night) + \"K\"\r\n                          : Math.round((entry.temp.night * 9) / 5 - 459.67) +\r\n                            \"°F\"}\r\n                      </Typography>\r\n                    </div>\r\n                    <img\r\n                      style={{\r\n                        margin: `${theme.spacing(1)}px 0px`,\r\n                        height: 32,\r\n                        width: 50,\r\n                        objectFit: \"cover\",\r\n                        backgroundColor:\r\n                          theme.palette.type === \"dark\" ? \"#909090\" : \"#DCDCDC\",\r\n                        borderRadius: 8,\r\n                      }}\r\n                      alt=\"icon\"\r\n                      src={`https://openweathermap.org/img/wn/${entry.weather[0].icon}@2x.png`}\r\n                    />\r\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                      <Water width={20} />\r\n                      <Typography variant=\"h6\" component=\"p\">\r\n                        {\"\\u00A0\"}\r\n                        {Math.round(entry.pop * 100)}%\r\n                      </Typography>\r\n                    </div>\r\n                  </Paper>\r\n                </div>\r\n              );\r\n            })}\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            onClick={() => setRedirect(<Redirect push to={`${path}/daily`} />)}\r\n            color=\"primary\"\r\n          >\r\n            Next 7 Days\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DailyWidget;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Sunrise } from \"@styled-icons/feather/Sunrise\";\r\nimport { Sunset } from \"@styled-icons/feather/Sunset\";\r\nimport { Paper, Typography, useMediaQuery, useTheme } from \"@material-ui/core\";\r\n\r\nfunction resizeFunction(canvas, canvasContainer, upscaleRes) {\r\n  canvas.width = upscaleRes * canvasContainer.offsetWidth;\r\n  canvas.height = canvas.width * 0.4;\r\n  canvas.style.width = `${canvas.width / upscaleRes}px`;\r\n  canvas.style.height = `${canvas.height / upscaleRes}px`;\r\n}\r\n\r\nfunction draw(canvas, sunriseUnix, sunsetUnix, currentTime, theme) {\r\n  if (canvas) {\r\n    const c = canvas.getContext(\"2d\");\r\n    c.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    c.lineCap = \"round\";\r\n    c.lineWidth = canvas.width / 20;\r\n\r\n    c.beginPath();\r\n    c.arc(\r\n      canvas.width / 2,\r\n      (canvas.height * 23) / 24,\r\n      canvas.width / 3,\r\n      -Math.PI,\r\n      0\r\n    );\r\n    c.strokeStyle =\r\n      theme.palette.type === \"dark\"\r\n        ? \"rgba(255,255,255,0.2)\"\r\n        : \"rgba(0,0,0,0.2)\";\r\n    c.stroke();\r\n\r\n    const range = sunsetUnix - sunriseUnix;\r\n    let percentOfDay = (currentTime - sunriseUnix) / range;\r\n    percentOfDay = percentOfDay > 1 ? 1 : percentOfDay;\r\n\r\n    c.lineWidth = canvas.width / 40;\r\n    c.beginPath();\r\n    percentOfDay > 1 / 90 &&\r\n      c.arc(\r\n        canvas.width / 2,\r\n        (canvas.height * 23) / 24,\r\n        canvas.width / 3,\r\n        -Math.PI + Math.PI / 180,\r\n        -Math.PI + Math.PI * percentOfDay - Math.PI / 180\r\n      );\r\n\r\n    const gradient = c.createLinearGradient(\r\n      0,\r\n      0,\r\n      (Math.PI * canvas.width) / 3,\r\n      0\r\n    );\r\n    gradient.addColorStop(0, \"rgba(238,118,0, 0.8)\");\r\n    gradient.addColorStop(0.5, \"rgba(255,244,79, 0.8)\");\r\n    gradient.addColorStop(1, \"rgba(0,33,71, 0.8)\");\r\n\r\n    c.strokeStyle = gradient;\r\n    c.stroke();\r\n  }\r\n}\r\n\r\nfunction SunriseSunset({\r\n  sunriseInUnix,\r\n  sunsetInUnix,\r\n  timezone_offset,\r\n  currentTime,\r\n}) {\r\n  const canvasContainerRef = useRef();\r\n  const canvasRef = useRef();\r\n  const sunriseRef = useRef();\r\n  const sunsetRef = useRef();\r\n\r\n  const theme = useTheme();\r\n  const breakpointMatches = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n  const themePersist = useRef(theme);\r\n  themePersist.current = theme;\r\n\r\n  useEffect(() => {\r\n    const upscaleRes = 2;\r\n    resizeFunction(canvasRef.current, canvasContainerRef.current, upscaleRes);\r\n\r\n    sunriseRef.current.style.width = canvasContainerRef.current.offsetWidth / 6;\r\n    sunsetRef.current.style.width = canvasContainerRef.current.offsetWidth / 6;\r\n  }, [breakpointMatches]);\r\n\r\n  const rerender = useRef(true);\r\n\r\n  function render() {\r\n    draw(\r\n      canvasRef.current,\r\n      sunriseInUnix,\r\n      sunsetInUnix,\r\n      currentTime,\r\n      themePersist.current\r\n    );\r\n    rerender.current && requestAnimationFrame(render);\r\n  }\r\n\r\n  useEffect(() => {\r\n    render();\r\n    return () => {\r\n      rerender.current = false;\r\n    };\r\n  }, []);\r\n\r\n  const dateSunrise = new Date((sunriseInUnix + timezone_offset) * 1000);\r\n  const timeSunrise = dateSunrise.toLocaleString(\"en-GB\", {\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    hourCycle: \"h23\",\r\n  });\r\n\r\n  const dateSunset = new Date((sunsetInUnix + timezone_offset) * 1000);\r\n  const timeSunset = dateSunset.toLocaleString(\"en-GB\", {\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    hourCycle: \"h23\",\r\n  });\r\n\r\n  return (\r\n    <Paper\r\n      variant=\"outlined\"\r\n      style={{\r\n        padding: theme.spacing(1),\r\n        width: breakpointMatches ? 137 : 150,\r\n        height: breakpointMatches ? 110 : 120,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <div ref={canvasContainerRef}>\r\n        <canvas ref={canvasRef} />\r\n      </div>\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            marginLeft: breakpointMatches ? 0 : 2,\r\n          }}\r\n        >\r\n          <Sunrise ref={sunriseRef} />\r\n          <Typography>{timeSunrise}</Typography>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            marginRight: breakpointMatches ? 0 : 2,\r\n          }}\r\n        >\r\n          <Sunset ref={sunsetRef} />\r\n          <Typography>{timeSunset}</Typography>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default SunriseSunset;\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Divider,\r\n  Typography,\r\n  makeStyles,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { SettingsContext } from \"../../App\";\r\nimport { TemperatureLow } from \"@styled-icons/fa-solid/TemperatureLow\";\r\nimport { Direction } from \"@styled-icons/entypo/Direction\";\r\nimport { Wind } from \"@styled-icons/boxicons-regular/Wind\";\r\nimport { Sun } from \"@styled-icons/heroicons-outline/Sun\";\r\nimport { Water } from \"@styled-icons/ionicons-outline/Water\";\r\nimport { Visibility } from \"@styled-icons/material-outlined/Visibility\";\r\nimport { ArrowsCompress } from \"@styled-icons/foundation/ArrowsCompress\";\r\nimport { CloudRain as Rain } from \"@styled-icons/boxicons-regular/CloudRain\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    paddingLeft: 8,\r\n  },\r\n  list: {\r\n    padding: 0,\r\n  },\r\n  medium: {\r\n    fontSize: theme.typography.pxToRem(14),\r\n    color: theme.palette.text.primary,\r\n  },\r\n  small: {\r\n    fontSize: theme.typography.pxToRem(12),\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\nfunction DetailList({ stationData }) {\r\n  const classes = useStyles();\r\n  const [settings] = useContext(SettingsContext);\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        flexWrap: \"wrap\",\r\n      }}\r\n    >\r\n      <List\r\n        className={classes.list}\r\n        style={{\r\n          minWidth: 200,\r\n          margin: `0px ${theme.spacing(2)}px`,\r\n          flexGrow: \"1\",\r\n        }}\r\n      >\r\n        <Divider />\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <TemperatureLow width={22} />\r\n              <Typography>{\"\\u00A0\\u00A0\"}Day/Night</Typography>\r\n            </div>\r\n          </ListItemText>\r\n          <ListItemSecondaryAction>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Typography>\r\n                {settings.temperature === \"c\"\r\n                  ? Math.round(stationData.daily[0].temp.day - 273.15) + \"°C\"\r\n                  : settings.temperature === \"k\"\r\n                  ? Math.round(stationData.daily[0].temp.day) + \"K\"\r\n                  : Math.round(\r\n                      (stationData.daily[0].temp.day * 9) / 5 - 459.67\r\n                    ) + \"°F\"}\r\n              </Typography>\r\n              <Typography className={classes.medium}>\r\n                {\"\\u00A0/\\u00A0\"}\r\n              </Typography>\r\n              <Typography className={classes.small}>\r\n                {settings.temperature === \"c\"\r\n                  ? Math.round(stationData.daily[0].temp.night - 273.15) + \"°C\"\r\n                  : settings.temperature === \"k\"\r\n                  ? Math.round(stationData.daily[0].temp.night) + \"K\"\r\n                  : Math.round(\r\n                      (stationData.daily[0].temp.night * 9) / 5 - 459.67\r\n                    ) + \"°F\"}\r\n              </Typography>\r\n            </div>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Rain width={25} style={{ marginLeft: -3 }} />\r\n              <Typography>{\"\\u00A0\\u00A0\"}Precipitation</Typography>\r\n            </div>\r\n          </ListItemText>\r\n          <ListItemSecondaryAction>\r\n            <Typography>\r\n              {Math.round(stationData.daily[0].pop * 100) + \"%\"}\r\n            </Typography>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <ArrowsCompress width={22} />\r\n              <Typography>{\"\\u00A0\\u00A0\"}Pressure</Typography>\r\n            </div>\r\n          </ListItemText>\r\n          <ListItemSecondaryAction>\r\n            <Typography>\r\n              {settings.pressure === \"hpa\"\r\n                ? stationData.daily[0].pressure + \" hPa\"\r\n                : settings.pressure === \"atm\"\r\n                ? Math.round(\r\n                    (stationData.daily[0].pressure * 1000) / 1013.2501\r\n                  ) /\r\n                    1000 +\r\n                  \" atm\"\r\n                : Math.round((stationData.daily[0].pressure * 100) / 33.86) /\r\n                    100 +\r\n                  \" inHg\"}\r\n            </Typography>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Visibility width={22} />\r\n              <Typography>{\"\\u00A0\\u00A0\"}Visibility</Typography>\r\n            </div>\r\n          </ListItemText>\r\n          <ListItemSecondaryAction>\r\n            <Typography>\r\n              {stationData.current.visibility >= 10000\r\n                ? settings.distance === \"m\"\r\n                  ? \">\" + stationData.current.visibility + \"m\"\r\n                  : settings.distance === \"km\"\r\n                  ? \">\" +\r\n                    Math.round((stationData.current.visibility * 10) / 1000) /\r\n                      10 +\r\n                    \"km\"\r\n                  : \">\" +\r\n                    Math.round((stationData.current.visibility * 10) / 1609) /\r\n                      10 +\r\n                    \"mi\"\r\n                : settings.distance === \"m\"\r\n                ? stationData.current.visibility + \"m\"\r\n                : settings.distance === \"km\"\r\n                ? Math.round((stationData.current.visibility * 10) / 1000) /\r\n                    10 +\r\n                  \"km\"\r\n                : Math.round((stationData.current.visibility * 10) / 1609) /\r\n                    10 +\r\n                  \"mi\"}\r\n            </Typography>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n      </List>\r\n      <List\r\n        className={classes.list}\r\n        style={{\r\n          minWidth: 200,\r\n          margin: `0px ${theme.spacing(2)}px`,\r\n          flexGrow: \"1\",\r\n        }}\r\n      >\r\n        <Divider />\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Water width={22} />\r\n              <Typography>{\"\\u00A0\\u00A0\"}Dew Point</Typography>\r\n            </div>\r\n          </ListItemText>\r\n          <ListItemSecondaryAction>\r\n            <Typography>\r\n              {settings.temperature === \"c\"\r\n                ? Math.round(stationData.daily[0].dew_point - 273.15) + \"°C\"\r\n                : settings.temperature === \"k\"\r\n                ? Math.round(stationData.daily[0].dew_point) + \"K\"\r\n                : Math.round(\r\n                    (stationData.daily[0].dew_point * 9) / 5 - 459.67\r\n                  ) + \"°F\"}\r\n            </Typography>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Sun width={22} />\r\n              <Typography>{\"\\u00A0\\u00A0\"}UV Index</Typography>\r\n            </div>\r\n          </ListItemText>\r\n          <ListItemSecondaryAction>\r\n            <Typography>{stationData.daily[0].uvi}</Typography>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Wind width={22} />\r\n              <Typography>{\"\\u00A0\\u00A0\"}Wind Speed</Typography>\r\n            </div>\r\n          </ListItemText>\r\n          <ListItemSecondaryAction>\r\n            <Typography>\r\n              {settings.speed === \"ms\"\r\n                ? Math.round(stationData.daily[0].wind_speed * 10) / 10 + \"m/s\"\r\n                : settings.speed === \"kph\"\r\n                ? Math.round(stationData.daily[0].wind_speed * 3.6 * 10) / 10 +\r\n                  \"kph\"\r\n                : Math.round(stationData.daily[0].wind_speed * 2.237 * 10) /\r\n                    10 +\r\n                  \"mph\"}\r\n            </Typography>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Direction width={22} />\r\n              <Typography>{\"\\u00A0\\u00A0\"}Wind Direction</Typography>\r\n            </div>\r\n          </ListItemText>\r\n          <ListItemSecondaryAction>\r\n            <Typography>{stationData.daily[0].wind_deg}°</Typography>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailList;\r\n","import React, { useContext } from \"react\";\r\nimport { Paper, useTheme, Typography } from \"@material-ui/core\";\r\nimport SunriseSunset from \"./SunriseSunset\";\r\nimport DetailList from \"./DetailList\";\r\nimport { SettingsContext } from \"../../App\";\r\n\r\nfunction AdditionalInfoWidget({ stationData }) {\r\n  const [settings] = useContext(SettingsContext);\r\n  const theme = useTheme();\r\n  return (\r\n    <Paper\r\n      elevation={4}\r\n      style={{\r\n        marginTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(1),\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          marginBottom: theme.spacing(2),\r\n          padding: theme.spacing(2),\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-between\",\r\n            marginRight: 20,\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" component=\"p\">\r\n            Weather Today in {stationData.city}, {stationData.country}\r\n          </Typography>\r\n          <div\r\n            style={{ display: \"flex\", flexDirection: \"column\", marginTop: 10 }}\r\n          >\r\n            <Typography variant=\"h3\" component=\"p\">\r\n              {settings.temperature === \"c\"\r\n                ? Math.round(stationData.current.feels_like - 273.15) + \"°C\"\r\n                : settings.temperature === \"k\"\r\n                ? Math.round(stationData.current.feels_like) + \"K\"\r\n                : Math.round(\r\n                    (stationData.current.feels_like * 9) / 5 - 459.67\r\n                  ) + \"°F\"}\r\n            </Typography>\r\n            <Typography color=\"textSecondary\" variant=\"h6\" component=\"p\">\r\n              Feels Like\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <SunriseSunset\r\n          sunriseInUnix={stationData.current.sunrise}\r\n          sunsetInUnix={stationData.current.sunset}\r\n          timezone_offset={stationData.timezone_offset}\r\n          currentTime={stationData.current.dt}\r\n        />\r\n      </div>\r\n      <DetailList stationData={stationData} />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default AdditionalInfoWidget;\r\n","import React, { useEffect } from \"react\";\r\nimport CurrentWeatherWidget from \"./CurrentWeatherWidget\";\r\nimport HourlyWidget from \"./HourlyWidget\";\r\nimport DailyWidget from \"./DailyWidget\";\r\nimport AdditionalInfoWidget from \"./AdditionalInfoWidget\";\r\n\r\nfunction Current({ stationData, setTabSelected }) {\r\n  useEffect(() => {\r\n    setTabSelected(0);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <CurrentWeatherWidget stationData={stationData} />\r\n      <AdditionalInfoWidget stationData={stationData} />\r\n      <HourlyWidget stationData={stationData} />\r\n      <DailyWidget stationData={stationData} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Current;\r\n","import React from \"react\";\r\nimport { Typography, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  parameterName: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  parameterValue: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\nfunction DetailBox({ parameterName, parameterValue }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\", width: 125 }}>\r\n      <Typography className={classes.parameterName}>{parameterName}</Typography>\r\n      <Typography className={classes.parameterValue} variant=\"h5\" component=\"p\">\r\n        {parameterValue}\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailBox;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport CurrentWeatherWidget from \"./CurrentWeatherWidget\";\r\nimport {\r\n  makeStyles,\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Typography,\r\n  useTheme,\r\n  Paper,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport DetailBox from \"./DetailBox\";\r\nimport { SettingsContext } from \"../../App\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  header: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    color: theme.palette.text.primary,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n    },\r\n  },\r\n  headerLarge: {\r\n    fontSize: theme.typography.pxToRem(21),\r\n    fontWeight: \"500\",\r\n    color: theme.palette.text.primary,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: theme.typography.pxToRem(18),\r\n    },\r\n  },\r\n  summaryContent: {\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nfunction Hourly({ stationData, setTabSelected }) {\r\n  useEffect(() => {\r\n    setTabSelected(1);\r\n  }, []);\r\n\r\n  const [settings] = useContext(SettingsContext);\r\n\r\n  const theme = useTheme();\r\n  const breakpointMatches = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  let prevDay;\r\n\r\n  return (\r\n    <>\r\n      <CurrentWeatherWidget stationData={stationData} />\r\n      <Paper\r\n        elevation={4}\r\n        style={{ marginTop: theme.spacing(4), padding: theme.spacing(2) }}\r\n        className={classes.root}\r\n      >\r\n        {stationData.hourly.slice(1).map((entry, index) => {\r\n          const date = new Date(\r\n            (entry.dt + stationData.timezone_offset) * 1000\r\n          );\r\n          const time = date.toLocaleString(\"en-GB\", {\r\n            hour: \"numeric\",\r\n            minute: \"numeric\",\r\n            hourCycle: \"h23\",\r\n          });\r\n\r\n          const day = date.toLocaleString(\"en-GB\", {\r\n            weekday: \"long\",\r\n          });\r\n\r\n          let dayChange = !(prevDay === day);\r\n          prevDay = day;\r\n\r\n          const fullDate = date.toLocaleString(\"en-GB\", {\r\n            weekday: \"long\",\r\n            day: \"2-digit\",\r\n            month: \"long\",\r\n          });\r\n\r\n          return (\r\n            <React.Fragment key={index}>\r\n              {dayChange && (\r\n                <Typography\r\n                  style={{ margin: theme.spacing(2) }}\r\n                  component=\"p\"\r\n                  variant=\"h6\"\r\n                >\r\n                  {fullDate}\r\n                </Typography>\r\n              )}\r\n              <Accordion\r\n                TransitionProps={{ unmountOnExit: true }}\r\n                elevation={0}\r\n                expanded={expanded === index}\r\n                onChange={handleChange(index)}\r\n              >\r\n                <AccordionSummary\r\n                  classes={{ content: classes.summaryContent }}\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      style={{ marginRight: breakpointMatches ? \"8vw\" : 75 }}\r\n                      className={classes.header}\r\n                    >\r\n                      {time}\r\n                    </Typography>\r\n                    <Typography className={classes.headerLarge}>\r\n                      {settings.temperature === \"c\"\r\n                        ? Math.round(entry.temp - 273.15) + \"°C\"\r\n                        : settings.temperature === \"k\"\r\n                        ? Math.round(entry.temp) + \"K\"\r\n                        : Math.round((entry.temp * 9) / 5 - 459.67) + \"°F\"}\r\n                    </Typography>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      flexBasis: breakpointMatches ? \"16.66%\" : \"40%\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      style={{\r\n                        height: 32,\r\n                        width: 50,\r\n                        objectFit: \"cover\",\r\n                        backgroundColor:\r\n                          theme.palette.type === \"dark\" ? \"#909090\" : \"#DCDCDC\",\r\n                        borderRadius: 8,\r\n                      }}\r\n                      alt=\"icon\"\r\n                      src={`https://openweathermap.org/img/wn/${entry.weather[0].icon}@2x.png`}\r\n                    />\r\n                    {breakpointMatches || (\r\n                      <Typography\r\n                        style={{ textTransform: \"capitalize\", marginLeft: 10 }}\r\n                        className={classes.header}\r\n                      >\r\n                        {entry.weather[0].description}\r\n                      </Typography>\r\n                    )}\r\n                  </div>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <Paper\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"100%\", padding: \"5px 20px\" }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        width: \"100%\",\r\n                        flexWrap: \"wrap\",\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-around\",\r\n                          flexGrow: \"1\",\r\n                          margin: \"5px 0 5px\",\r\n                        }}\r\n                      >\r\n                        <DetailBox\r\n                          parameterName=\"Feels Like\"\r\n                          parameterValue={\r\n                            settings.temperature === \"c\"\r\n                              ? Math.round(entry.feels_like - 273.15) + \"°C\"\r\n                              : settings.temperature === \"k\"\r\n                              ? Math.round(entry.feels_like) + \"K\"\r\n                              : Math.round(\r\n                                  (entry.feels_like * 9) / 5 - 459.67\r\n                                ) + \"°F\"\r\n                          }\r\n                        />\r\n                        <DetailBox\r\n                          parameterName=\"Precipitation\"\r\n                          parameterValue={Math.round(entry.pop * 100) + \"%\"}\r\n                        />\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-around\",\r\n                          flexGrow: \"1\",\r\n                          margin: \"5px 0 5px\",\r\n                        }}\r\n                      >\r\n                        <DetailBox\r\n                          parameterName=\"Humidity\"\r\n                          parameterValue={entry.humidity + \"%\"}\r\n                        />\r\n                        <DetailBox\r\n                          parameterName=\"Pressure\"\r\n                          parameterValue={\r\n                            settings.pressure === \"hpa\"\r\n                              ? entry.pressure + \" hPa\"\r\n                              : settings.pressure === \"atm\"\r\n                              ? Math.round(\r\n                                  (entry.pressure * 1000) / 1013.2501\r\n                                ) /\r\n                                  1000 +\r\n                                \" atm\"\r\n                              : Math.round((entry.pressure * 100) / 33.86) /\r\n                                  100 +\r\n                                \" inHg\"\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        width: \"100%\",\r\n                      }}\r\n                    ></div>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        width: \"100%\",\r\n                        flexWrap: \"wrap\",\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-around\",\r\n                          flexGrow: \"1\",\r\n                          margin: \"5px 0 5px\",\r\n                        }}\r\n                      >\r\n                        <DetailBox\r\n                          parameterName=\"Visibility\"\r\n                          parameterValue={\r\n                            entry.visibility >= 10000\r\n                              ? settings.distance === \"m\"\r\n                                ? \">\" + entry.visibility + \"m\"\r\n                                : settings.distance === \"km\"\r\n                                ? \">\" +\r\n                                  Math.round((entry.visibility * 10) / 1000) /\r\n                                    10 +\r\n                                  \"km\"\r\n                                : \">\" +\r\n                                  Math.round((entry.visibility * 10) / 1609) /\r\n                                    10 +\r\n                                  \"mi\"\r\n                              : settings.distance === \"m\"\r\n                              ? entry.visibility + \"m\"\r\n                              : settings.distance === \"km\"\r\n                              ? Math.round((entry.visibility * 10) / 1000) /\r\n                                  10 +\r\n                                \"km\"\r\n                              : Math.round((entry.visibility * 10) / 1609) /\r\n                                  10 +\r\n                                \"mi\"\r\n                          }\r\n                        />\r\n                        <DetailBox\r\n                          parameterName=\"Clouds\"\r\n                          parameterValue={entry.clouds + \"%\"}\r\n                        />\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-around\",\r\n                          flexGrow: \"1\",\r\n                          margin: \"5px 0 5px\",\r\n                        }}\r\n                      >\r\n                        <DetailBox\r\n                          parameterName=\"Wind Speed\"\r\n                          parameterValue={\r\n                            settings.speed === \"ms\"\r\n                              ? Math.round(entry.wind_speed * 10) / 10 + \"m/s\"\r\n                              : settings.speed === \"kph\"\r\n                              ? Math.round(entry.wind_speed * 3.6 * 10) / 10 +\r\n                                \"kph\"\r\n                              : Math.round(entry.wind_speed * 2.237 * 10) / 10 +\r\n                                \"mph\"\r\n                          }\r\n                        />\r\n                        <DetailBox\r\n                          parameterName=\"Wind Direction\"\r\n                          parameterValue={entry.wind_deg + \"°\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        width: \"100%\",\r\n                      }}\r\n                    ></div>\r\n                  </Paper>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Hourly;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport CurrentWeatherWidget from \"./CurrentWeatherWidget\";\r\nimport {\r\n  makeStyles,\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Typography,\r\n  useTheme,\r\n  Paper,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport DetailBox from \"./DetailBox\";\r\nimport { SettingsContext } from \"../../App\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  headerDate: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    color: theme.palette.text.primary,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n    },\r\n  },\r\n  headerSmall: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.primary,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: theme.typography.pxToRem(12),\r\n    },\r\n  },\r\n  headerLarge: {\r\n    fontSize: theme.typography.pxToRem(21),\r\n    fontWeight: \"500\",\r\n    color: theme.palette.text.primary,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: theme.typography.pxToRem(18),\r\n    },\r\n  },\r\n  headerMedium: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    fontWeight: \"500\",\r\n    color: theme.palette.text.primary,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n    },\r\n  },\r\n  summaryContent: {\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  summaryRoot: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: \"0 8px\",\r\n    },\r\n  },\r\n  feelsLikeName: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  feelsLikeValueDay: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\nfunction Daily({ stationData, setTabSelected }) {\r\n  useEffect(() => {\r\n    setTabSelected(2);\r\n  }, []);\r\n\r\n  const [settings] = useContext(SettingsContext);\r\n\r\n  const theme = useTheme();\r\n  const breakpointMatches = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CurrentWeatherWidget stationData={stationData} />\r\n      <Paper\r\n        elevation={4}\r\n        style={{ marginTop: theme.spacing(4), padding: theme.spacing(2) }}\r\n        className={classes.root}\r\n      >\r\n        {stationData.daily.map((entry, index) => {\r\n          const date = new Date(\r\n            (entry.dt + stationData.timezone_offset) * 1000\r\n          );\r\n\r\n          const day = date.toLocaleString(\"en-GB\", {\r\n            weekday: breakpointMatches ? \"short\" : \"long\",\r\n            day: \"2-digit\",\r\n          });\r\n\r\n          return (\r\n            <Accordion\r\n              TransitionProps={{ unmountOnExit: true }}\r\n              elevation={0}\r\n              key={index}\r\n              expanded={expanded === index}\r\n              onChange={handleChange(index)}\r\n            >\r\n              <AccordionSummary\r\n                classes={{\r\n                  content: classes.summaryContent,\r\n                  root: classes.summaryRoot,\r\n                }}\r\n                expandIcon={<ExpandMoreIcon />}\r\n              >\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    width: breakpointMatches ? \"40vw\" : \"min(35vw, 275px)\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      width: breakpointMatches ? 60 : 120,\r\n                      flexShrink: \"0\",\r\n                    }}\r\n                  >\r\n                    <Typography className={classes.headerDate}>\r\n                      {day}\r\n                    </Typography>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      marginLeft: breakpointMatches ? \"4vw\" : 25,\r\n                      width: 100,\r\n                      flexShrink: \"0\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Typography className={classes.headerLarge}>\r\n                      {settings.temperature === \"c\"\r\n                        ? Math.round(entry.temp.day - 273.15) + \"°C\"\r\n                        : settings.temperature === \"k\"\r\n                        ? Math.round(entry.temp.day) + \"K\"\r\n                        : Math.round((entry.temp.day * 9) / 5 - 459.67) + \"°F\"}\r\n                    </Typography>\r\n                    <Typography className={classes.headerMedium}>\r\n                      {\"\\u00A0/\\u00A0\"}\r\n                    </Typography>\r\n                    <Typography className={classes.headerSmall}>\r\n                      {settings.temperature === \"c\"\r\n                        ? Math.round(entry.temp.night - 273.15) + \"°C\"\r\n                        : settings.temperature === \"k\"\r\n                        ? Math.round(entry.temp.night) + \"K\"\r\n                        : Math.round((entry.temp.night * 9) / 5 - 459.67) +\r\n                          \"°F\"}\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    flexBasis: breakpointMatches ? \"16.66%\" : \"40%\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    style={{\r\n                      height: 32,\r\n                      width: 50,\r\n                      objectFit: \"cover\",\r\n                      backgroundColor:\r\n                        theme.palette.type === \"dark\" ? \"#909090\" : \"#DCDCDC\",\r\n                      borderRadius: 8,\r\n                    }}\r\n                    alt=\"icon\"\r\n                    src={`https://openweathermap.org/img/wn/${entry.weather[0].icon}@2x.png`}\r\n                  />\r\n                  {breakpointMatches || (\r\n                    <Typography\r\n                      style={{ textTransform: \"capitalize\", marginLeft: 10 }}\r\n                      className={classes.header}\r\n                    >\r\n                      {entry.weather[0].description}\r\n                    </Typography>\r\n                  )}\r\n                </div>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Paper\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"100%\", padding: \"5px 20px\" }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                        flexGrow: \"1\",\r\n                        margin: \"5px 0 5px\",\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          width: 125,\r\n                        }}\r\n                      >\r\n                        <Typography className={classes.feelsLikeName}>\r\n                          Feels Like\r\n                        </Typography>\r\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                          <Typography\r\n                            className={classes.feelsLikeValueDay}\r\n                            variant=\"h5\"\r\n                            component=\"p\"\r\n                          >\r\n                            {settings.temperature === \"c\"\r\n                              ? Math.round(entry.feels_like.day - 273.15) + \"°C\"\r\n                              : settings.temperature === \"k\"\r\n                              ? Math.round(entry.feels_like.day) + \"K\"\r\n                              : Math.round(\r\n                                  (entry.feels_like.day * 9) / 5 - 459.67\r\n                                ) + \"°F\"}\r\n                          </Typography>\r\n                          <Typography className={classes.headerMedium}>\r\n                            {\"\\u00A0/\\u00A0\"}\r\n                          </Typography>\r\n                          <Typography className={classes.headerSmall}>\r\n                            {settings.temperature === \"c\"\r\n                              ? Math.round(entry.feels_like.night - 273.15) +\r\n                                \"°C\"\r\n                              : settings.temperature === \"k\"\r\n                              ? Math.round(entry.feels_like.night) + \"K\"\r\n                              : Math.round(\r\n                                  (entry.feels_like.night * 9) / 5 - 459.67\r\n                                ) + \"°F\"}\r\n                          </Typography>\r\n                        </div>\r\n                      </div>\r\n                      <DetailBox\r\n                        parameterName=\"Precipitation\"\r\n                        parameterValue={Math.round(entry.pop * 100) + \"%\"}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                        flexGrow: \"1\",\r\n                        margin: \"5px 0 5px\",\r\n                      }}\r\n                    >\r\n                      <DetailBox\r\n                        parameterName=\"Humidity\"\r\n                        parameterValue={entry.humidity + \"%\"}\r\n                      />\r\n                      <DetailBox\r\n                        parameterName=\"Pressure\"\r\n                        parameterValue={\r\n                          settings.pressure === \"hpa\"\r\n                            ? entry.pressure + \" hPa\"\r\n                            : settings.pressure === \"atm\"\r\n                            ? Math.round((entry.pressure * 1000) / 1013.2501) /\r\n                                1000 +\r\n                              \" atm\"\r\n                            : Math.round((entry.pressure * 100) / 33.86) / 100 +\r\n                              \" inHg\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      width: \"100%\",\r\n                    }}\r\n                  ></div>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      width: \"100%\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                        flexGrow: \"1\",\r\n                        margin: \"5px 0 5px\",\r\n                      }}\r\n                    >\r\n                      <DetailBox\r\n                        parameterName=\"Dew Point\"\r\n                        parameterValue={\r\n                          settings.temperature === \"c\"\r\n                            ? Math.round(entry.dew_point - 273.15) + \"°C\"\r\n                            : settings.temperature === \"k\"\r\n                            ? Math.round(entry.dew_point) + \"K\"\r\n                            : Math.round((entry.dew_point * 9) / 5 - 459.67) +\r\n                              \"°F\"\r\n                        }\r\n                      />\r\n                      <DetailBox\r\n                        parameterName=\"Clouds\"\r\n                        parameterValue={entry.clouds + \"%\"}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                        flexGrow: \"1\",\r\n                        margin: \"5px 0 5px\",\r\n                      }}\r\n                    >\r\n                      <DetailBox\r\n                        parameterName=\"Wind Speed\"\r\n                        parameterValue={\r\n                          settings.speed === \"ms\"\r\n                            ? Math.round(entry.wind_speed * 10) / 10 + \"m/s\"\r\n                            : settings.speed === \"kph\"\r\n                            ? Math.round(entry.wind_speed * 3.6 * 10) / 10 +\r\n                              \"kph\"\r\n                            : Math.round(entry.wind_speed * 2.237 * 10) / 10 +\r\n                              \"mph\"\r\n                        }\r\n                      />\r\n                      <DetailBox\r\n                        parameterName=\"Wind Direction\"\r\n                        parameterValue={entry.wind_deg + \"°\"}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      width: \"100%\",\r\n                    }}\r\n                  ></div>\r\n                </Paper>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          );\r\n        })}\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Daily;\r\n","import React, { useEffect, useRef, useContext, useState } from \"react\";\r\nimport { useTheme, useMediaQuery, Paper } from \"@material-ui/core\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport { ApiKeysContext } from \"../../App\";\r\n\r\nfunction rotateCamera(timestamp, offset, playAnimation, map, iteration) {\r\n  if (iteration === 2) {\r\n    offset = timestamp;\r\n  }\r\n  // clamp the rotation between 0 -360 degrees\r\n  // Divide timestamp by 100 to slow rotation to ~10 degrees / sec\r\n  map.current.rotateTo(((timestamp - offset) / 450) % 360, { duration: 0 });\r\n\r\n  playAnimation.current &&\r\n    requestAnimationFrame((timestamp) =>\r\n      rotateCamera(timestamp, offset, playAnimation, map, iteration + 1)\r\n    );\r\n}\r\n\r\nfunction Map({ coords }) {\r\n  const theme = useTheme();\r\n  const map = useRef();\r\n  const locationMarker = useRef();\r\n\r\n  const playAnimation = useRef(true);\r\n\r\n  const API_KEY_MAPBOX = useContext(ApiKeysContext).API_KEY_MAPBOX;\r\n\r\n  const breakpointMatches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const breakpointMatchesPersist = useRef(breakpointMatches);\r\n  breakpointMatchesPersist.current = breakpointMatches;\r\n  const [heightOfMap, setHeightOfMap] = useState(0);\r\n\r\n  useEffect(() => {\r\n    function eventListenerFunction() {\r\n      const mapContainer = document.querySelector(\"#map\");\r\n      setHeightOfMap(\r\n        breakpointMatchesPersist.current\r\n          ? mapContainer.clientWidth / 2\r\n          : mapContainer.clientWidth\r\n      );\r\n      map.current.resize();\r\n    }\r\n    window.addEventListener(\"resize\", eventListenerFunction);\r\n    return () => window.removeEventListener(\"resize\", eventListenerFunction);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!map.current) {\r\n      mapboxgl.accessToken = API_KEY_MAPBOX;\r\n\r\n      map.current = new mapboxgl.Map({\r\n        container: \"map\",\r\n        style:\r\n          theme.palette.type === \"dark\"\r\n            ? \"mapbox://styles/mapbox/dark-v10\"\r\n            : \"mapbox://styles/mapbox/light-v10\",\r\n        center: [coords.lon, coords.lat],\r\n        zoom: 10,\r\n        pitch: 45,\r\n        bearing: 0,\r\n        attributionControl: false,\r\n      });\r\n\r\n      map.current.on(\"load\", () => {\r\n        // Start the animation.\r\n        rotateCamera(0, 0, playAnimation, map, 1);\r\n        const mapContainer = document.querySelector(\"#map\");\r\n        setHeightOfMap(\r\n          breakpointMatchesPersist.current\r\n            ? mapContainer.clientWidth / 2\r\n            : mapContainer.clientWidth\r\n        );\r\n        map.current.resize();\r\n      });\r\n\r\n      map.current.addControl(\r\n        new mapboxgl.NavigationControl({\r\n          visualizePitch: true,\r\n        })\r\n      );\r\n    } else {\r\n      map.current.setStyle(\r\n        theme.palette.type === \"dark\"\r\n          ? \"mapbox://styles/mapbox/dark-v10\"\r\n          : \"mapbox://styles/mapbox/light-v10\"\r\n      );\r\n    }\r\n\r\n    locationMarker.current?.remove();\r\n    locationMarker.current = new mapboxgl.Marker({\r\n      color: theme.palette.primary.main,\r\n    })\r\n      .setLngLat([coords.lon, coords.lat])\r\n      .addTo(map.current);\r\n  }, [theme]);\r\n\r\n  useEffect(() => () => (playAnimation.current = false), []);\r\n\r\n  return (\r\n    <Paper\r\n      elevation={4}\r\n      id=\"map\"\r\n      style={{ width: \"100%\", height: heightOfMap }}\r\n      onMouseDown={() => (playAnimation.current = false)}\r\n    ></Paper>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ApiKeysContext } from \"../../App\";\r\nimport { Switch as RouterSwitch, Route, useHistory } from \"react-router-dom\";\r\nimport Today from \"./Today\";\r\nimport Hourly from \"./Hourly\";\r\nimport Daily from \"./Daily\";\r\nimport { CircularProgress, Snackbar, Grid } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Map from \"./Map\";\r\n\r\nasync function fetchUsingOneCallAPI(id, setStationData, API_KEY, history) {\r\n  // OneCallAPI only accepts geoCoord requests, so the coordinates are first found using the traditional api\r\n  const currentWeatherDataAPIResponse = await fetch(\r\n    `https://api.openweathermap.org/data/2.5/weather?id=${id}&appid=${API_KEY}`\r\n  );\r\n\r\n  if (!currentWeatherDataAPIResponse.ok) {\r\n    history.push(\"/\");\r\n    return;\r\n  }\r\n\r\n  const currentWeatherDataAPIResponseJSON =\r\n    await currentWeatherDataAPIResponse.json();\r\n\r\n  const oneCallAPIResponseJSON = await (\r\n    await fetch(\r\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${currentWeatherDataAPIResponseJSON.coord.lat}&lon=${currentWeatherDataAPIResponseJSON.coord.lon}&appid=${API_KEY}`\r\n    )\r\n  ).json();\r\n\r\n  setStationData({\r\n    ...oneCallAPIResponseJSON,\r\n    city: currentWeatherDataAPIResponseJSON.name,\r\n    country: currentWeatherDataAPIResponseJSON.sys.country,\r\n  });\r\n\r\n  localStorage.setItem(\"id\", id);\r\n}\r\n\r\nfunction MainPage({ match, setTabSelected }) {\r\n  const [stationData, setStationData] = useState(null);\r\n  const API_KEY = useContext(ApiKeysContext).API_KEY_OPENWEATHERMAP;\r\n\r\n  const [snackbarOpen, setSnackbarOpen] = useState(true);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetchUsingOneCallAPI(match.params.id, setStationData, API_KEY, history);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {stationData && (\r\n        <Grid\r\n          justify=\"center\"\r\n          container\r\n          style={{ width: \"100%\", height: \"100%\", margin: \"40px 0 20px\" }}\r\n        >\r\n          <Grid\r\n            container\r\n            item\r\n            xs={12}\r\n            lg={8}\r\n            alignItems=\"flex-start\"\r\n            alignContent=\"flex-start\"\r\n            spacing={4}\r\n          >\r\n            <Grid item md={8} xs={12}>\r\n              <RouterSwitch>\r\n                <Route\r\n                  exact\r\n                  path={`/${match.params.id}`}\r\n                  render={(props) => (\r\n                    <Today\r\n                      setTabSelected={setTabSelected}\r\n                      {...props}\r\n                      stationData={stationData}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path={`/${match.params.id}/hourly`}\r\n                  render={(props) => (\r\n                    <Hourly\r\n                      setTabSelected={setTabSelected}\r\n                      {...props}\r\n                      stationData={stationData}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path={`/${match.params.id}/daily`}\r\n                  render={(props) => (\r\n                    <Daily\r\n                      setTabSelected={setTabSelected}\r\n                      {...props}\r\n                      stationData={stationData}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"*\"\r\n                  render={() => {\r\n                    history.push(\"/\" + match.params.id);\r\n                  }}\r\n                />\r\n              </RouterSwitch>\r\n            </Grid>\r\n            <Grid item md={4} xs={12}>\r\n              <Map coords={{ lat: stationData.lat, lon: stationData.lon }} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {stationData && (\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n          open={snackbarOpen}\r\n          autoHideDuration={1500}\r\n          onClose={() => setSnackbarOpen(false)}\r\n        >\r\n          <MuiAlert\r\n            elevation={4}\r\n            variant=\"filled\"\r\n            onClose={() => setSnackbarOpen(false)}\r\n            severity=\"success\"\r\n          >\r\n            Location Found\r\n          </MuiAlert>\r\n        </Snackbar>\r\n      )}\r\n      {!stationData ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <CircularProgress />\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\nexport default MainPage;\r\n"],"sourceRoot":""}